{"rt.ecf":{"name":"Eclipse Communication Framework","id":"rt.ecf","description":"\u003Cp\u003EEclipse\u0026nbsp;\u003Ca href=\u0022http:\/\/www.eclipse.org\/ecf\u0022\u003EECF\u003C\/a\u003E provides frameworks for messaging and communications. We fully implement the \u003Ca href=\u0022https:\/\/wiki.eclipse.org\/ECF#OSGi_Remote_Services\u0022\u003EOSGi Remote Services\u003C\/a\u003E\u0026nbsp;(RS) and Remote Service Admin (RSA) specifications.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/rt.ecf","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/logo128x37.png","website":"http:\/\/www.eclipse.org\/ecf","state":"Regular","provisioned":true},"iot.paho":{"name":"Eclipse Paho","id":"iot.paho","description":"\u003Cp\u003EThe Eclipse Paho project provides reliable open-source implementations of open and standard messaging protocols aimed at new, existing, and emerging applications for Machine-to-Machine (M2M) and Internet of Things (IoT).\u003C\/p\u003E\r\n\r\n\u003Cp\u003EPaho reflects the inherent physical and cost constraints of device connectivity. Its objectives include effective levels of decoupling between devices and applications, designed to keep markets open and encourage the rapid growth of scalable Web and Enterprise middleware and applications. Paho contains \u003Ca href=\u0022http:\/\/mqtt.org\u0022\u003EMQTT\u003C\/a\u003E publish\/subscribe client implementations for use on embedded platforms, along with corresponding server support as determined by the community.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.paho","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/paho-logo-200.png","website":"http:\/\/www.eclipse.org\/paho\/","state":"Regular","provisioned":true},"technology.uomo":{"name":"Eclipse UOMo","id":"technology.uomo","description":"\u003Cp\u003EEclipse UOMo adds Units of Measurement support for IT Systems and Services both to common programming languages like Java and Data Exchange standards like UCUM and formats including UnitsML, SensorML, MathML, general XML or JSON.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.uomo","logo":null,"website":"http:\/\/www.eclipse.org\/uomo\/","state":"Incubating","provisioned":true},"tools.mtj":{"name":"Eclipse Mobile Tools for Java\u2122","id":"tools.mtj","description":"\u003Cp\u003E\u003Cspan\u003EEclipse Mobile Tools for Java\u0026trade; project creates tools and frameworks to extend the Eclipse platform to support embedded and mobile device Java application development.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003C!--break--\u003E\r\n\u003Ch4\u003E\r\n\tNews\u003C\/h4\u003E\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\tSeptember 15, 2015,\u0026nbsp;\u003Cstrong\u003EMobile Tools for Java\u0026trade;\u0026nbsp;2.0.1 is released.\u003C\/strong\u003E\u003Cbr \/\u003E\r\n\t\t\u003Cbr \/\u003E\r\n\t\t\u003Cdiv\u003E\r\n\t\t\tMobile Tools for Java\u0026trade; (MTJ) 2.0.1 release is focused on bug fixes and support of latest Eclipse Mars.\u003C\/div\u003E\r\n\t\t\u003Cdiv\u003E\r\n\t\t\tThe scope of MTJ 2.0.1 is listed below:\u003C\/div\u003E\r\n\t\t\u003Cul\u003E\r\n\t\t\t\u003Cli\u003E\r\n\t\t\t\tMigration to Eclipse Mars\u003C\/li\u003E\r\n\t\t\t\u003Cli\u003E\r\n\t\t\t\tBetter Javadocs detections for libraries that represent the same logical API but correspond to different API versions\u003C\/li\u003E\r\n\t\t\t\u003Cli\u003E\r\n\t\t\t\tBug fixes\u003C\/li\u003E\r\n\t\t\u003C\/ul\u003E\r\n\t\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tNovember 14, 2014,\u0026nbsp;\u003Cstrong\u003E\u003Cspan\u003EMobile Tools for Java\u0026trade;\u0026nbsp;2.0 is released.\u003C\/span\u003E\u003C\/strong\u003E\u003Cbr \/\u003E\r\n\t\t\u003Cdiv\u003E\r\n\t\t\t\u003Cp\u003E\u003Cspan\u003EMobile Tools for Java\u0026trade; (MTJ) 2.0 release is making MTJ plugin IoT ready by supporting Java\u0026trade; ME 8 platform. Java\u0026trade; ME 8 is the major update of the Java\u0026trade; ME technology as a modern embedded software platform, purpose-built as a foundation for new services in the Internet of Things (IoT). MTJ 2.0 is based on Eclipse Luna and provides a support for CLDC 1.8 configuration (\u003Ca href=\u0022https:\/\/jcp.org\/en\/jsr\/detail?id=360\u0022\u003EJSR 360\u003C\/a\u003E), MEEP 8.0 profile (\u003Ca href=\u0022https:\/\/jcp.org\/en\/jsr\/detail?id=361\u0022\u003EJSR 361\u003C\/a\u003E) and better IMP-NG profile (\u003Ca href=\u0022https:\/\/jcp.org\/en\/jsr\/detail?id=228\u0022\u003EJSR 228\u003C\/a\u003E) support.\u003C\/span\u003E\u003C\/p\u003E\r\n\t\t\t\u003Cp\u003E\u003Cspan\u003EOther improvements in this release includes new extensible Code Validation Builder that provides an ability to perform pre-compilation analysis and generates warnings by 3rd party plugins created on top of MTJ, support for Java\u0026trade; ME APIs javadocs in zip archives and a lot of bug fixes.\u0026nbsp;\u003C\/span\u003E\u003C\/p\u003E\r\n\t\t\u003C\/div\u003E\r\n\t\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/tools.mtj","logo":null,"website":"http:\/\/www.eclipse.org\/mtj\/","state":"Regular","provisioned":true},"iot.eclipsescada":{"name":"Eclipse NeoSCADA","id":"iot.eclipsescada","description":"\u003Cp\u003EEclipse NeoSCADA (supervisory control and data acquisition) is a type of industrial control system (ICS). Industrial control systems are computer controlled systems that monitor and control industrial processes that exist in the physical world. SCADA systems historically distinguish themselves from other ICS systems by being large scale processes that can include multiple sites, and large distances.\u003C\/p\u003E\r\n\u003Cp\u003ESimply speaking the primary target of Eclipse NeoSCADA is a way to connect different industrial devices to a common communication system and post-process as well as visualize the data to operating personnel.\u003C\/p\u003E\r\n\u003Cp\u003ESince this scheme will also work with non-industrial devices and devices do become more complex and tend to become software solutions themselves the term \u0026ldquo;device\u0026rdquo; should be more considered as an \u0026ldquo;other system\u0026rdquo;.\u003C\/p\u003E\r\n\u003Cp\u003EThe idea of a SCADA system is to provide mostly scalar values instead of complex data structures. Where necessary data structures are split up into multiple scalar values. This is done in order to process the data more quickly and allow common processing of data.\u003C\/p\u003E\r\n\u003Cp\u003EFor example a meteo station is providing current weather information. It can provide temperature and solar radiation. These are two floating point values which are processed independently. Still the same alarming schema (high level alarm) can be applied to both values. The values can both be assigned a quality\/alarm information (alarm state) which can then be shown using the same user interface element and the same visualization scheme (alarm is displayed with red background). This way many different scalar values can be processed exactly the same way.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.eclipsescada","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/LOGO_neoSCADA_151207_72.png","website":"http:\/\/www.eclipse.org\/eclipsescada\/","state":"Incubating","provisioned":true},"iot.ponte":{"name":"Eclipse Ponte","id":"iot.ponte","description":"\u003Cp\u003EPonte provides reusable solutions for bridging M2M protocols.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.ponte","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/logo-banner-white_0.png","website":"http:\/\/eclipse.org\/ponte","state":"Incubating","provisioned":true},"iot.concierge":{"name":"Eclipse Concierge","id":"iot.concierge","description":"\u003Cp\u003EConcierge is a small-footprint implementation of the OSGi Core Specifications R5 standard optimized for mobile and embedded devices.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/rt.concierge","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/logo_0.png","website":"https:\/\/www.eclipse.org\/concierge\/","state":"Incubating","provisioned":true},"iot.mosquitto":{"name":"Eclipse Mosquitto","id":"iot.mosquitto","description":"\u003Cp\u003EEclipse Mosquitto provides a lightweight server implementation of the MQTT protocol that is suitable for all situations from full power machines to embedded and low power machines. Sensors and actuators, which are often the sources and destinations of MQTT messages, can be very small and lacking in power. This also applies to the embedded machines to which they are connected, which is where Mosquitto could be run.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.mosquitto","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/mosquitto-200px.png","website":"https:\/\/eclipse.org\/mosquitto","state":"Incubating","provisioned":true},"iot.smarthome":{"name":"Eclipse SmartHome","id":"iot.smarthome","description":"\u003Cp\u003EThe Eclipse SmartHome project is a framework that allows building smart home solutions that have a strong focus on heterogeneous environments, i.e. solutions that deal with the integration of different protocols or standards. Its purpose is to provide a uniform access to devices and information and to facilitate different kinds of interactions with them. This framework consists out of a set of OSGi bundles that can be deployed on an OSGi runtime and which defines OSGi services as extension points.\u003C\/p\u003E\r\n\u003Cp\u003EThe stack is meant to be usable on any kind of system that can run an OSGi stack - be it a multi-core server, a residential gateway or a Raspberry Pi.\u003C\/p\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.smarthome","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/smarthome_1.png","website":"https:\/\/www.eclipse.org\/smarthome\/","state":"Incubating","provisioned":true},"iot.kura":{"name":"Eclipse Kura","id":"iot.kura","description":"\u003Cp\u003EEclipse Kura offers a Java\/OSGi-based container for M2M applications running in service gateways. Kura provides or, when available, aggregates open source implementations for the most common services needed by M2M applications. Kura components are designed as configurable OSGi Declarative Service exposing service API and raising events. While several Kura components are in pure Java, others are invoked through JNI and have a dependency on the Linux operating system.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.kura","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/kura_logo_small.png","website":"https:\/\/www.eclipse.org\/kura\/","state":"Regular","provisioned":true},"iot.om2m":{"name":"Eclipse OM2M","id":"iot.om2m","description":"\u003Cp\u003EThe Eclipse OM2M project is an open source implementation of the oneM2M standard. It provides a framework for developing services independently of the underlying network and aims to facilitate deployment of vertical applications and heterogeneous devices.\u0026nbsp;\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.om2m","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/OM2M_logo.png","website":"http:\/\/www.eclipse.org\/om2m","state":"Incubating","provisioned":true},"iot.californium":{"name":"Eclipse Californium (Cf) CoAP Framework","id":"iot.californium","description":"\u003Cp\u003EEclipse Californium (Cf) is an open source implementation of the Constrained Application Protocol (CoAP). It is written in Java and targets unconstrained environments such as back-end service infrastructures (e.g., proxies, resource directories, or cloud services) and less constrained environments such as embedded devices running Linux (e.g., smart home\/factory controllers or cellular gateways).\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.californium","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/Cf_128.png","website":"https:\/\/www.eclipse.org\/californium\/","state":"Regular","provisioned":true},"iot.wakaama":{"name":"Eclipse Wakaama","id":"iot.wakaama","description":"\u003Cp\u003EWakaama provides APIs for a server application to send commands to registered LWM2M Clients. On client applications, Wakaama checks received commands for syntax and access rights and then dispatches them to the relevant objects.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.wakaama","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/wakaama.png","website":null,"state":"Incubating","provisioned":true},"tools.titan":{"name":"Eclipse Titan","id":"tools.titan","description":"\u003Cp\u003E\u003Cspan style=\u0022font-family:arial,helvetica,sans-serif; font-size:14px\u0022\u003EEclipse Titan is a TTCN-3 compilation and execution environment with an \u0026nbsp;Eclipse-based IDE.\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\u0022font-family:arial,helvetica,sans-serif; font-size:14px\u0022\u003EThe user of the tool can develop test cases, test execution logic and build the executable test suite for several platforms.\u003C\/span\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/tools.titan","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/Symbol_200.png","website":null,"state":"Regular","provisioned":true},"iot.paho.incubator":{"name":"Eclipse Paho Incubator","id":"iot.paho.incubator","description":"\u003Cp\u003EA permanent incubator for Paho.\u003C\/p\u003E\r\n\u003Cp\u003EA permanent incubator is a project that is intended to perpetually remain in the\u0026nbsp;\u003Ca href=\u0022https:\/\/www.eclipse.org\/projects\/dev_process\/development_process.php#6_2_3_Incubation\u0022\u003Eincubation\u003C\/a\u003E\u0026nbsp;phase. Permanent incubators are an excellent place to innovate, test new ideas, grow functionality that may one day be moved into another project, and develop new committers.\u003C\/p\u003E\r\n\u003Cp\u003EPermanent incubator projects never have releases; they cannot participate in the annual simultaneous release. Permanent incubators may have builds, and downloads. They conform to the standard incubation branding requirements and are subject to the IP due diligence rules outlined for incubating projects. Permanent incubators do not graduate.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.paho.incubator","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/paho-logo-200_0.png","website":null,"state":"Incubating","provisioned":true},"iot.vorto":{"name":"Eclipse Vorto","id":"iot.vorto","description":"\u003Cp\u003EThe Eclipse Vorto project comprises of the meta information model, the tool set to create information models, the code generators and the repository to manage existing information models. The meta information model and also the tool set are based on the Eclipse EMF (Eclipse Modeling Framework) framework. \u003Cspan\u003EEMF is a modeling framework and code generation facility for building tools and other applications based on a structured data model.\u003C\/span\u003E For more details regarding EMF, please refer to the \u003Ca class=\u0022external-link\u0022 href=\u0022http:\/\/www.eclipse.org\/modeling\/emf\/\u0022 rel=\u0022nofollow\u0022\u003EEclipse Modeling Framework Project\u003C\/a\u003E page. The tool set is realized as an Eclipse plug-in and thus can be integrated into any supported Eclipse platform.\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cu\u003EMeta Information Model\u003C\/u\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EWhile information models represent the capabilities of a particular type of device in its entirety, the meta model describes how the information models are structured. Since the overall target of this project is to push standardization of information models it is very important to have a sustainable and flexible meta model which can be used as a basis of the described standardization. In particular this means that the meta model must be compatible to meta models defined for example by EEBus, ETSI and oneM2M. It is also required that the meta model is compatible with the Smart Home Device Template (SDT) which has been specified by HGi and is currently discussed with BBF, ETSI and the OSGi Alliance.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EFunction blocks describe the capabilities of a device, exposing properties, operations and events. The function blocks which are essential parts of information models can be re-used for describing arbitrary types of devices sharing the same functionalities. The meta model is technically based on the Eclipse EMF framework\u0026nbsp;which allows the use of other Eclipse components based on EMF, such as \u003Ca href=\u0022http:\/\/www.eclipse.org\/sirius\/\u0022\u003EEclipse Sirius\u003C\/a\u003E for graphical modelers or template engines for code generations such as JET or XPand. \u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EThe IoT tool set textual editor itself uses the \u003Ca href=\u0022http:\/\/www.eclipse.org\/Xtext\/\u0022\u003EEclipse Xtext Framework\u003C\/a\u003E to parse the textual information model representation and convert it to an Information EMF Model. The information model code generators can then further process these EMF models.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003E\u003Cu\u003ECode Generators\u003C\/u\u003E\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EThe code generators allow application developers to comfortably include the described concepts into their applications. For example one code generator allows generating information model based parts of an access layer for Eclipse Smart Home and another generator allows doing this for openHAB or OSGi-DAL. Other examples could be EEBus, ETSI or oneM2M specific implementation parts. An openHAB\u0026nbsp;generator for example would map an information model to items with command types, which is the basis of the openHAB representation for a thing in the IoT world.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EThe described tool set provides an extension point to include new code generators without major effort. This enables the usage of the information model concept in various environments and device ecosystems. The code generators concept is very general which means that there are no constraints regarding the implementations.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EAs mentioned before the device information model is based on EMF which empowers code generators to generate logic written in any language, for example\u0026nbsp;XML, JSON, Lua, Java or C\/C++. It leverages template engines such as Java Emitter Templates (JET) or XPand.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003E\u003Cu\u003EIoT Tool Set\u003C\/u\u003E\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EThe tool provides two options for creating information models based on the described meta-model:\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EThe first possibility is to do this using a graphical environment that allows doing most of the steps using drag-and-drop mechanisms. This option targets at the group of business users that have no or only a small background regarding programming skills. The created information models can be validated and it is also possible to use the code generators for the creation of solutions.\u003C\/span\u003E\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EThe second possibility is to use a domain specific language (DSL) that has been designed for comfortably creating the information models. The corresponding editors allow syntax highlighting and auto completion. This option targets at the group of developers that have an IT background and are experienced in using programming and scripting languages.\u003C\/span\u003E\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EIn addition, the tool set shall allow for importing existing information models which are for example conform to ETSI, oneM2M or EEBus.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EThe planned initial features of the tool set include:\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EInformation Model Language Editor\u003Cstrong\u003E:\u0026nbsp;\u003C\/strong\u003EA simple way to describe information models in a declarative way using auto-completion, syntax highlighting, content assistance and model validation. The declarative model is internally converted into an EMF model.\u003C\/span\u003E\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EEclipse Project Wizard\u003Cstrong\u003E:\u003C\/strong\u003E\u0026nbsp;Easily create an information model project using an Eclipse Project Wizard.\u0026nbsp;\u003C\/span\u003E\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003E\u003Cu\u003EThe Information Model Repository\u003C\/u\u003E\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EThe information model repository is a server based technology which shall be used as the centralized storage location for information models. During development time the repository allows developers accessing the standardized information models for integrating them into applications (e.g. by using the above described code generators).\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EIt is comprised of:\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022line-height: 1.42857;color: rgb(0,0,0);\u0022\u003EResource and version management using e.g. Git or CDO.\u003C\/span\u003E\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022line-height: 1.42857;color: rgb(0,0,0);\u0022\u003EQuery layer to query information models by different search criteria.\u003C\/span\u003E\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022line-height: 1.42857;color: rgb(0,0,0);\u0022\u003EDependency management of information models.\u003C\/span\u003E\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022line-height: 1.42857;color: rgb(0,0,0);\u0022\u003EWeb browser interface.\u003C\/span\u003E\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\t\u003Cspan style=\u0022line-height: 1.42857;color: rgb(0,0,0);\u0022\u003EIDE Integration.\u003C\/span\u003E\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EWhen version 1.0 of the repository is released it shall be hosted by the Eclipse Foundation to initialize the standardization process.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003E\u003Cu\u003EExample\u003C\/u\u003E\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003ELet\u0026#39;s assume Vendor A creates a new Z-Wave smoke detector which can measure the temperature, return the battery status and also fire an alarm event in case of fire. Using the IoT tool set, vendor A creates a corresponding information model which describes the three functionalities. After creating the information model vendor A publishes the model to the Information Model Repository. Now user B who bought such a smoke detector wants to include it into his openHAB environment. Using the IoT tool set he can browse the repository to find the information model created by Vendor A. After downloading it he could create the openHAB representation of the device using a specific code generator. In a last step he would complete this representation by adding required Z-Wave configurations.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cspan style=\u0022color: rgb(0,0,0);\u0022\u003EIn another scenario user C wants to access the smoke detector using an OSGi device abstraction layer. He also downloads the information model using the IoT tool set and creates an implementation skeleton using another OSGi specific code generator. Within the created skeleton he would then add his specific code.\u003C\/span\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.vorto","logo":null,"website":"http:\/\/www.eclipse.org\/vorto","state":"Incubating","provisioned":true},"iot.leshan":{"name":"Eclipse Leshan","id":"iot.leshan","description":"\u003Cp\u003EEclipse\u0026nbsp;\u003Ca href=\u0022https:\/\/eclipse.org\/leshan\/\u0022\u003ELeshan\u003C\/a\u003E is an OMA Lightweight M2M (LWM2M) implementation in Java.\u003C\/p\u003E\r\n\u003C!--break--\u003E\r\n\u003Cp\u003ELeshan relies on the \u003Ca href=\u0022https:\/\/projects.eclipse.org\/projects\/iot.californium\u0022 target=\u0022_blank\u0022\u003EEclipse IoT Californium\u003C\/a\u003E project for the CoAP and DTLS implementation. It is tested against the LWM2M C client provided by the \u003Ca href=\u0022https:\/\/projects.eclipse.org\/projects\/iot.wakaama\u0022 target=\u0022_blank\u0022\u003EEclipse IoT Wakaama\u003C\/a\u003E project.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.leshan","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/leshan.png","website":"https:\/\/eclipse.org\/leshan","state":"Incubating","provisioned":true},"iot.4diac":{"name":"Eclipse 4diac","id":"iot.4diac","description":"\u003Cp\u003EEclipse 4diac\u0026trade; in its current form has been started 2007 as open source project fostering the further development of IEC 61499 for its use in distributed Industrial Process Measurement and Control Systems (IPMCS) and further distribute research results from the original contributors. From the beginning it provided everything necessary to program and execute distributed IPMCS.\u003C\/p\u003E\r\n\u003Cp\u003E4diac became one of the main sources for IEC 61499-based research and development (see for example the \u003Ca href=\u0022http:\/\/www.fordiac.org\/52.0.html\u0022\u003E4diac Users\u0026#39; Workshop\u003C\/a\u003E series). It has been successfully applied in a number of industrial systems, like \u003Ca href=\u0022http:\/\/www.fordiac.org\/30.0.html\u0022\u003Emanufacturing systems\u003C\/a\u003E, \u003Ca href=\u0022http:\/\/www.fordiac.org\/28.0.html\u0022\u003Elogistics\u003C\/a\u003E, \u003Ca href=\u0022http:\/\/www.fordiac.org\/48.0.html\u0022\u003Epower and energy applications\u003C\/a\u003E, \u003Ca href=\u0022http:\/\/www.fordiac.org\/31.0.html\u0022\u003Erobotics\u003C\/a\u003E, or building automation.\u003C\/p\u003E\r\n\u003Cp\u003EA screenshot of the 4diac-IDE is presented in the following figure:\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cimg alt=\u00224DIAC overview\u0022 src=\u0022\/sites\/default\/files\/4diac.jpg\u0022 style=\u0022width: 480px; height: 333px;\u0022 \/\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.4diac","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/4diac.png","website":"http:\/\/www.eclipse.org\/4diac","state":"Incubating","provisioned":true},"iot.risev2g":{"name":"Eclipse RISE V2G","id":"iot.risev2g","description":"\u003Ch3\u003E\r\n\tAbout RISE V2G\u003C\/h3\u003E\r\n\u003Cdiv\u003E\r\n\tEclipse RISE V2G is a \u003Cstrong\u003ER\u003C\/strong\u003Eeference \u003Cstrong\u003EI\u003C\/strong\u003Emplementation \u003Cstrong\u003ES\u003C\/strong\u003Eupporting the \u003Cstrong\u003EE\u003C\/strong\u003Evolution of the \u003Cstrong\u003EV\u003C\/strong\u003Eehicle-\u003Cstrong\u003E2\u003C\/strong\u003E-\u003Cstrong\u003EG\u003C\/strong\u003Erid communication interface ISO\/IEC 15118.\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\tThe international standard ISO\/IEC 15118, entitled \u0026quot;Road vehicles - Vehicle to grid communication interface\u0026quot;, defines a digital IP-based communication interface between an electric vehicle (EV) and a charging station (named Electric Vehicle Supply Equipment - EVSE). It allows for a user-friendly \u0026quot;plug-and-charge\u0026quot; mechanism for authentication, authorisation, billing, and flexible load control based on a wide set of information exchanged between the EV and EVSE.\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\tA rise in the wide application of this standard is essential for reaching the goal of integrating EVs as flexible energy storage devices into a smart grid.\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E\r\n\u003C!--break--\u003E\r\n\u003Ch3\u003E\r\n\tMission Statement\u003C\/h3\u003E\r\n\u003Cp\u003EThe Eclipse RISE V2G project shall serve as an open source standard-compliant reference implementation and documentation. As such, the objective is to provide a test platform for interoperability testing and to offer an information resource for interested parties. The adoption of a new technology heavily depends on the interoperability of its various implementations. The more tests conducted, the more stable and reliable the developed solution will be.\u003C\/p\u003E\r\n\u003Cp\u003EAs the ISO\/IEC 15118 consists of eight documment parts - with part 1 to 3 defining use cases and requirements for conductive charging, parts 4 and 5 dealing with conformance tests, and parts 6 to 8 specifying use cases and requirements for inductive charging - the RISE V2G project shall evolve to cover all aspects of conductive and inductive charging from the physical layer up to the application layer. However, it requires a lot of work to be done to fulfil this endeavor.\u003Cbr \/\u003E\r\n\tYour assistance would therefore be very appreciated, be it by testing this reference implementation against your own solution - this way uncovering possible bugs or making code optimisation suggestions - or by providing an implementation for yet missing parts.\u003C\/p\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\u003Ch3\u003E\r\n\tScope and current status\u003C\/h3\u003E\r\n\u003Cp\u003EAs this standard describes a client\/server-based protocol with the EV being the client and the EVSE being the server, this reference implementation covers both entities. The charging process can be authenticated and authorised via a so-called plug-and-charge mechanism (PnC) or via external identification means (EIM) such as an RFID card. Furthermore, there are several message sets defined for AC (alternating current) and DC (direct current) charging.\u003C\/p\u003E\r\n\u003Cp\u003EThis project covers all defined message sets and identification means.\u0026nbsp;It currently focuses on the implementation of part 2 (\u003Ca href=\u0022http:\/\/www.iso.org\/iso\/home\/store\/catalogue_tc\/catalogue_detail.htm?csnumber=55366\u0022 target=\u0022_blank\u0022\u003EISO\/IEC 15118-2\u003C\/a\u003E) of this standard defining the protocol requirements from the network up to the application layer (layer 3 to 7 of the ISO\/OSI layer model) for the conductive charging scenario.\u003C\/p\u003E\r\n\u003Cp\u003EThis version provides a full implementation of this part including cryptographic functionality to enable TLS communication and XML signatures. The only feature not implemented is the OCSP (Online Certificate Status Protocol). Further testing is required by third parties to assure the correct implementation of all requirements listed in ISO\/IEC 15118-2.\u003C\/p\u003E\r\n\u003Cdiv\u003E\r\n\tEclipse RISE V2G allows you to create an EVCC instance acting as the client sending request messages related to the chosen charging scenario as well as an SECC instance acting as the server which is responding to those requests. EVCC stands for Electric Vehicle Communication Controller (inside the EV) whereas SECC is short for Supply Equipment Communication Controller (inside the EVSE).\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\tThe current status of the project consists of three subprojects which implement the conductive charging scenario:\u003C\/div\u003E\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\tthe EVCC project covering its state machine and request messages\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tthe SECC project covering its state machine and response messages\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\ta shared project with common classes used by both entities\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\u003Ch3\u003E\r\n\tCredits\u003C\/h3\u003E\r\n\u003Cp\u003EThe code of the Eclipse RISE V2G project has its origin in the research project\u0026nbsp;\u003Ca href=\u0022http:\/\/izeus.kit.edu\/\u0022 target=\u0022_blank\u0022\u003EiZEUS\u003C\/a\u003E, funded by the Federal Ministry for Economic Affairs and Energy and conducted at the Karlsruhe Institute of Technology, Germany.\u003Cbr \/\u003E\r\n\tThe first prototype of an\u0026nbsp;\u003Ca href=\u0022http:\/\/www.iso.org\/iso\/home\/store\/catalogue_tc\/catalogue_detail.htm?csnumber=55366\u0022 target=\u0022_blank\u0022\u003EISO\/IEC 15118-2\u003C\/a\u003E\u0026nbsp;implementation has been realised by the RISE V2G project lead within the course of that research project at the Institute of Applied Informatics and Formal Description Methods (AFIB). This prototype has since been reworked and further enhanced at \u003Ca href=\u0022http:\/\/www.chargepartner.com\/en\u0022 target=\u0022_blank\u0022\u003EChargepartner GmbH\u003C\/a\u003E, a software-as-a-service specialist in the e-mobility market.\u003C\/p\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\u003Ch3\u003E\r\n\tResources\u003C\/h3\u003E\r\n\u003Cp\u003EThe code is hosted on the \u003Ca href=\u0022https:\/\/github.com\/eclipse\/risev2g\u0022 target=\u0022_blank\u0022\u003EGitHub project website\u003C\/a\u003E.\u0026nbsp;\u003Cbr \/\u003E\r\n\tContribute any questions and suggestions to the \u003Ca href=\u0022https:\/\/dev.eclipse.org\/mailman\/listinfo\/risev2g-dev\u0022 target=\u0022_blank\u0022\u003Edevelopers\u0026#39; mailing list\u003C\/a\u003E.\u003Cbr \/\u003E\r\n\tJoin the \u003Ca href=\u0022http:\/\/www.eclipse.org\/forums\/eclipse.risev2g\u0022 target=\u0022_blank\u0022\u003Ecommunity forum\u003C\/a\u003E for any discussions.\u003Cbr \/\u003E\r\n\tView the \u003Ca href=\u0022https:\/\/wiki.eclipse.org\/RISE_V2G\u0022 target=\u0022_blank\u0022\u003Egetting started guide and further documentation\u003C\/a\u003E to get you up and running.\u003Cbr \/\u003E\r\n\tIf you encounter a bug, \u003Ca href=\u0022https:\/\/bugs.eclipse.org\/bugs\/enter_bug.cgi?product=Risev2g\u0022 target=\u0022_blank\u0022\u003Efile it in Bugzilla\u003C\/a\u003E.\u003C\/p\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.risev2g","logo":null,"website":null,"state":"Incubating","provisioned":true},"iot.tinydtls":{"name":"Eclipse tinydtls","id":"iot.tinydtls","description":"\u003Cp\u003Etinydtls is a library for Datagram Transport Layer Security (DTLS) covering both the client and the server state machine. It is implemented in C and provides support for the mandatory cipher suites specified in \u003Ca href=\u0022https:\/\/tools.ietf.org\/html\/rfc7252\u0022\u003ECoAP\u003C\/a\u003E.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.tinydtls","logo":null,"website":null,"state":"Incubating","provisioned":true},"iot.hawkbit":{"name":"Eclipse hawkBit","id":"iot.hawkbit","description":"\u003Cp\u003EProject hawkBit aims to create a \u003Cstrong\u003Edomain independent back end\u003C\/strong\u003E solution for rolling out \u003Cstrong\u003Esoftware updates\u003C\/strong\u003E to constrained edge \u003Cstrong\u003Edevices\u003C\/strong\u003E as well as more powerful controllers and gateways connected to IP based networking infrastructure. Devices can be connected to the hawkBit server either directly through an optimized interface or indirectly through federated\u0026nbsp;device management servers.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 src=\u0022\/sites\/default\/files\/pictures\/hawkBit.png\u0022 style=\u0022height:348px; width:700px\u0022 \/\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003EhawkBit is device and communication channel neutral by means of supporting:\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003ESoftware\u003C\/strong\u003E\u0026nbsp;and\u0026nbsp;Operating system\u0026nbsp;updates for\u0026nbsp;M2M gateways\u0026nbsp;(typically but not necessarily running Linux)\u0026nbsp;and\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003EFirmware\u003C\/strong\u003E\u0026nbsp;updates for\u0026nbsp;embedded\u0026nbsp;devices\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003Eboth for\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003Ecable\u003C\/strong\u003E\u0026nbsp;or\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003Eover the air\u003C\/strong\u003E\u0026nbsp;(OTA) connected devices\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003EFeatures at a glance:\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\u003Cp\u003EA device and software repository.\u003C\/p\u003E\r\n\t\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\u003Cp\u003EArtifact content delivery.\u003C\/p\u003E\r\n\t\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\u003Cp\u003ESoftware update and roll out management.\u003C\/p\u003E\r\n\t\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\u003Cp\u003EReporting and monitoring.\u003C\/p\u003E\r\n\t\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\u003Cp\u003EInterfaces:\u003C\/p\u003E\r\n\r\n\t\u003Cul style=\u0022list-style-type:disc\u0022\u003E\r\n\t\t\u003Cli\u003E\r\n\t\t\u003Cp\u003Efor direct device control.\u003C\/p\u003E\r\n\t\t\u003C\/li\u003E\r\n\t\t\u003Cli\u003E\r\n\t\t\u003Cp\u003Efor IoT solutions or applications to manage the repository and the roll outs.\u003C\/p\u003E\r\n\t\t\u003C\/li\u003E\r\n\t\t\u003Cli\u003E\r\n\t\t\u003Cp\u003Efor device management federation (i.e. indirect device control)\u003C\/p\u003E\r\n\t\t\u003C\/li\u003E\r\n\t\t\u003Cli\u003E\r\n\t\t\u003Cp\u003Eand a user interface to operators to manage and run the roll outs.\u003C\/p\u003E\r\n\t\t\u003C\/li\u003E\r\n\t\u003C\/ul\u003E\r\n\t\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 src=\u0022\/sites\/default\/files\/pictures\/SP_Intro.png\u0022 style=\u0022height:492px; width:700px\u0022 \/\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.hawkbit","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/hawkbit-200px.png","website":"https:\/\/www.eclipse.org\/hawkbit\/","state":"Incubating","provisioned":true},"iot.hono":{"name":"Eclipse Hono","id":"iot.hono","description":"\u003Cdiv\u003E\r\n\tConnectivity is at the heart of IoT solutions. Devices (things) need to be connected to a back end component where the data and functionality of the devices is leveraged to provide some higher level business value. IoT solution developers can pick from a wide array of existing (open source) technology to implement a device connectivity \u0026amp; management layer for the particular type of devices at hand. While this is often fun for the developers to do, the resulting solutions are often silo applications lacking the ability to scale horizontally with the number of devices connected and the number of back end components consuming the device data and functionality.\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\tThe Eclipse IoT Working Group has therefore discussed \u0026nbsp;a more generic, cloud-based IoT platform architecture which better supports the implementation of IoT solutions without requiring developers to solve some of the recurring (technical) challenges over and over again. The diagram below provides an overview of the IoT Server Platform as discussed in the working group.\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u003Cimg alt=\u0022\u0022 src=\u0022https:\/\/wiki.eclipse.org\/images\/6\/6f\/IoT_Server_Building_Blocks.jpg\u0022 style=\u0022width: 100%; float: left;\u0022 \/\u003E\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\tThe diagram shows how devices in the field are connected to a cloud-based back end either via a Field Gateway (e.g. something like Eclipse Kura) or directly to so-called \u003Cem\u003EProtocol Adapters\u003C\/em\u003E. The Protocol Adapters\u0026#39; responsibility is abstracting communication protocols as well as providing location transparency of devices to the other back end components. The devices upload (sensor) data to the back end while the functions\/services they expose can be invoked from the back end. These two directions of information flow can be characterized as follows:\u003C\/div\u003E\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\tTelemetry\u003Cbr \/\u003E\r\n\t\t\u003Cstrong\u003EData\u003C\/strong\u003E flowing downstream (left to right) from devices to the back end to a consumer like a Business Application or the Device Management component usually \u003Cstrong\u003Econsists of\u003C\/strong\u003E\u0026nbsp;a small set of discrete values like \u003Cstrong\u003Esensor readings\u003C\/strong\u003E or status property values. In most cases these messages are one-way only, i.e. devices sending this kind of data usually do not expect a reply from the back end.\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tCommand \u0026amp; Control\u003Cbr \/\u003E\r\n\t\t\u003Cstrong\u003EMessages\u003C\/strong\u003E flowing upstream (right to left) from back end components like Business Applications often \u003Cstrong\u003Erepresent invocations of services\u003C\/strong\u003E or functionality provided by connected devices, e.g. instructions to download and apply a firmware update, setting configuration parameters or querying the current reading of a sensor. In most cases a reply to the sent message is expected by the back end component.\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\u003Cdiv\u003E\r\n\tIt seems reasonable to assume that the number of messages flowing upstream (Telemetry) will be orders of magnitude larger than the number of messages flowing downstream (Command \u0026amp; Control). The aggregated overall number of messages flowing upstream is expected to be in the range of several hundred thousand to millions per second. Note that in this architecture the same (cloud-based) infrastructure is shared by multiple solutions.\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\tThe IoT Connector component provides the central link between the device-facing Protocol Adapters, additional re-usable back end components, e.g. Device Management or Software Provisioning, and last but not least the IoT solutions leveraging the devices\u0026#39; data and services. Solution developers can use the IoT Connector to uniformly and transparently interact with all kinds of devices without the need for caring about the particular communication protocol(s) the devices use. Multiple solutions can use the same IoT Connector instance \u003Cstrong\u003Erunning in a shared cloud environment\u003C\/strong\u003E in order to \u003Cstrong\u003Eshare the data and functionality of all connected devices\u003C\/strong\u003E. The IoT Connector ensures that only those components can consume data and control devices that have been granted authorization by the device owner. In this regard the IoT Connector can be considered an IoT specific message broker targeted at cloud deployment scenarios.\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u003Cdiv\u003E\r\n\t\tThe IoT Connector component needs to fulfill a set of\u0026nbsp;\u003Cstrong\u003Enon-functional requirements\u003C\/strong\u003E, in particular regarding\u0026nbsp;\u003Cstrong\u003Ehorizontal scalability\u003C\/strong\u003E, that are specific to both the deployment environment (cloud) and the intended architectural platform characteristics (as opposed to embedding a connectivity layer into applications individually). However, these requirements are not specific to any particular application domain. From a technical point of view it makes no difference if a sensor reading received via a LWM2M protocol adapter represents a temperature or the relative humidity. In both cases the IoT Connector\u0026#39;s responsibility is to forward the messages containing the values to (potentially multiple) authorized consumers without introducing too much latency.\u003C\/div\u003E\r\n\t\u003Cdiv\u003E\r\n\t\t\u0026nbsp;\u003C\/div\u003E\r\n\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u0026nbsp;\u003C\/div\u003E\r\n\u003Cdiv\u003E\r\n\t\u003Cstrong\u003EFeatures at a glance\u003C\/strong\u003E\u003C\/div\u003E\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\tSecure message dispatching\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tSupport for different message exchange patterns\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tUsed for cloud service federation\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tProvides interfaces to support implementation of protocol adaptors which allow:\r\n\t\t\u003Cul\u003E\r\n\t\t\t\u003Cli\u003E\r\n\t\t\t\tSending telemetry data\u003C\/li\u003E\r\n\t\t\t\u003Cli\u003E\r\n\t\t\t\tReceiving device control messages (from applications\/solutions)\u003C\/li\u003E\r\n\t\t\t\u003Cli\u003E\r\n\t\t\t\tRegistering authorized consumers of telemetry data received from connected devices\u003C\/li\u003E\r\n\t\t\u003C\/ul\u003E\r\n\t\u003C\/li\u003E\r\n\u003C\/ul\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.hono","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/HONO-Logo_Bild-Wort_quadrat-w-200x180px.png","website":"https:\/\/www.eclipse.org\/hono","state":"Incubating","provisioned":true},"iot.edje":{"name":"Eclipse Edje","id":"iot.edje","description":"\u003Cp wrap=\u0022\u0022\u003EThe edge devices connected to the Cloud that constitute the Internet of Things (IoT) require support for building blocks, standards and frameworks like those provided by the Eclipse Foundation projects: Californium, Paho, Leshan, Kura, Mihini, etc.\u003Cbr \/\u003E\r\n\tBecause of the large deployment of Java technology in the Cloud, on the PC, mobile and server sides, most projects above are implemented in Java technology.\u003C\/p\u003E\r\n\u003C!--break--\u003E\r\n\u003Cp\u003EDeploying these technologies on embedded devices requires a scalable IoT software platform that can support the hardware foundations of the IoT: microcontrollers (MCU). MCU delivered by companies like STMicroelectronics, NXP+Freescale, Renesas, Atmel, Microchip, etc. are small low-cost low-power 32-bit processors designed for running software in resource-constraint environments: low memory (typically KB), flash (typically MB) and frequency (typically MHz).\u003Cbr \/\u003E\r\n\t\u003Cbr \/\u003E\r\n\tThe goal of the Edje project is to define a standard high-level Java API called Hardware Abstraction Layer (HAL) for accessing hardware features delivered by microcontrollers such as GPIO, DAC, ADC, PWM, MEMS, UART, CAN, Network, LCD, etc. that can directly connect to native libraries, drivers and board support packages provided by silicon vendors with their evaluation kits.\u003Cbr \/\u003E\r\n\t\u003Cbr \/\u003E\r\n\tTo achieve this goal, the Edje project also defines the minimal set of API required for delivering IoT services, leveraging largely-deployed technologies, and meeting performance and memory constraints of IoT embedded devices. Edje defines the Edje Device Configuration (EDC). Care has been taken to make the EDC a proper subset of the different Java runtime environments found in Android, J2SE, J2ME, OSGi Minimum and others. This project presents the packages and API that constitute the core of EDC, defines the minimal foundation that iot.eclipse.org projects can rely on, and still compatible with economical constraints of the IoT: footprint. EDC covers the standard packages part of the Java core language (java.lang, java.io, \u0026hellip;).\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.edje","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/edje_2.png","website":null,"state":"Incubating","provisioned":true},"iot.whiskers":{"name":"Eclipse Whiskers","id":"iot.whiskers","description":"\u003Cp\u003EWhiskers is an \u003Ca href=\u0022https:\/\/en.wikipedia.org\/wiki\/SensorThings_API\u0022\u003EOGC SensorThings API\u003C\/a\u003E framework consisting of a JavaScript client and a light-weight server for IoT gateways (e.g., Raspberry Pi). The SensorThings API is an OGC (Open Geospatial Consortium) standard that allows IoT (Internet of Things) devices and their data to be connected; a major goal is to foster a healthy and open IoT ecosystem, as opposed to one dominated by proprietary information silos.\u003C\/p\u003E\r\n\u003Cp\u003EJavaScript is ubiquitous, powering client-side web applications and server-side services alike. The availability of an open source client library is an important step in the adoption of the OGC SensorThings standard, as it makes development quicker and easier.\u003C\/p\u003E\r\n\u003Cp\u003EIn addition the a client library, Whiskers will also have a SensorThings server module for IoT gateways, such as Raspberry Pi. Developers will be able to deploy and configure IoT gateways, make them SensorThings API-compliant, and connect with spatial data servers around the world that implement the full array of \u003Ca href=\u0022http:\/\/www.opengeospatial.org\/ogc\/markets-technologies\/swe\u0022\u003EOGC Sensor Web Enablement (SWE) standards\u003C\/a\u003E.\u003C\/p\u003E\r\n\u003Cp\u003EWhiskers aims to make SensorThings development easy for the large and growing world of IoT developers.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.whiskers","logo":null,"website":null,"state":"Incubating","provisioned":true},"iot.milo":{"name":"Eclipse Milo","id":"iot.milo","description":"\u003Cp\u003EOPC Unified Architecture is an interoperability standard that enables the secure and reliable exchange of industrial automation data while remaining cross-platform and vendor neutral. The specification, currently version 1.03, is developed and maintained by the OPC Foundation with the guidance of individual software developers, industry vendors, and end-users. It defines the interface between Clients and Servers, including access to real-time data, monitoring of alarms and events, historical data access, and data modeling.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.milo","logo":null,"website":null,"state":"Incubating","provisioned":true},"iot.kapua":{"name":"Eclipse Kapua","id":"iot.kapua","description":"\u003Cp\u003EThe following diagram provides a functional architecture of the Eclipse Kapua project.\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 src=\u0022https:\/\/eth-public.s3.amazonaws.com\/EverywareCloudArch.png\u0022 style=\u0022width: 640px; height: 317px;\u0022 \/\u003E\u003C\/p\u003E\r\n\u003Ch2\u003E\r\n\tDevice Connectivity\u003C\/h2\u003E\r\n\u003Cp\u003EThe connectivity of the devices is managed through a multi-protocol message broker. In the initial contribution, the protocol for the device connectivity will be the IoT protocol MQTT. The broker supports other protocols including AMQP and WebSockets for application integration.\u003C\/p\u003E\r\n\u003Cp\u003EThe device connectivity module is responsible to authenticate connections, enforce the appropriate authorization \u0026ndash; for example in the topic namespace \u0026ndash; and maintain a Device Registry. The Device Registry stores the device profile, the device connection status and the device connection log. It also enables device organization through custom attributes and tags.\u003C\/p\u003E\r\n\u003Ch2\u003E\r\n\tMessage Routing\u003C\/h2\u003E\r\n\u003Cp\u003EThe stream of data published by the devices may have different consumers. Certain messages, like command and control messages, are meant to be consumed by the Device Management component; other messages, like the telemetry data are meant to be archived in the IoT Platform or re-directed to other systems. The Message Routing component allows for flexible handling of message streams avoiding hard coded behaviors through configurable massage routes.\u003C\/p\u003E\r\n\u003Ch2\u003E\r\n\tDevice Management\u003C\/h2\u003E\r\n\u003Cp\u003EThrough the Device Management component, the IoT platform can perform remote operations on the connected devices. The IoT platform exposes an open contract towards the devices being managed with no assumption on the device software stack. In the initial contribution, the device management contract is based on an open application protocol over MQTT. Such protocol is already implemented by the Eclipse Kura project. With such protocol, the IoT platform can:\u003C\/p\u003E\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\r\n\t\tIntrospect and manage the device configuration\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tManage the device services including service start and stop operations\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tManage the device applications including application install, update, and remove\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tExecute remote OS commands on the device\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tGet and set device attributes and resources\u003C\/li\u003E\r\n\t\u003Cli\u003E\r\n\t\tProvision initial configuration of the devices\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\u003Cp\u003EIn its evolution and future community contributions, Eclipse Kapua may adopt additional device management protocols like the emerging LWM2M standard\u003C\/p\u003E\r\n\u003Ch2\u003E\r\n\tData Management\u003C\/h2\u003E\r\n\u003Cp\u003EEclipse Kapua can archive the telemetry data sent by the devices into a persistent storage for application retrieval. A reference message payload is defined which allows for a timestamp, a geo position, strongly typed message headers and an opaque message body. The chosen encoding is based on an open Google Protocol Buffers grammar.\u003C\/p\u003E\r\n\u003Cp\u003EIn the initial contribution, a NoSQL data storage is used to allow for a flexible indexing of the telemetry messages. Incoming messages are stored and indexed by timestamp, topic, and originating asset. The NoSQL storage allows for indexing of the message headers.\u003C\/p\u003E\r\n\u003Cp\u003EData Management also keeps a Data Registry which maintains the topics and the metrics that received incoming traffic.\u003C\/p\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\u003Ch2\u003E\r\n\tSecurity\u003C\/h2\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\u003Cp\u003EA foundation layer maintains the security aspects of the IoT platform like the management of tenants, accounts and users. The account model supports a hierarchical access control structure. Following Role Based Access Control (RBAC), user identities can be defined and associated with one or more permissions guaranteeing the principle of \u0026quot;least privilege\u0026quot;. Devices connect to the platform using the credentials of one of these user identities or through SSL authentication.\u0026nbsp;\u003C\/p\u003E\r\n\u003Ch2\u003E\r\n\tApplication Integration\u003C\/h2\u003E\r\n\u003Cp\u003EFor integration with existing applications, Eclipse Kapua offers modern Web Services API based on Representational State Transfer (REST). The REST API exposes all the platform functionality, including device management and data management. The REST API also offers a \u0026quot;bridge\u0026quot; to the MQTT broker enabling the routing of commands from applications to devices without a specific connection to the message broker. Technologies such as REST\/Comet\/WebSockets are included allowing real-time display of data published by the devices in web pages and mobile dashboards.\u0026nbsp;\u003C\/p\u003E\r\n\u003Ch2\u003E\r\n\tAdministration Console\u003C\/h2\u003E\r\n\u003Cp\u003EEclipse Kapua features a web-based administration Console to perform all device and data management operations. A screenshot of the administration Console is shown below.\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 src=\u0022https:\/\/eth-public.s3.amazonaws.com\/EverywareCloudConsoleScreenshot.png\u0022 style=\u0022width: 600px; height: 333px;\u0022 \/\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.kapua","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/kapua-200.png","website":"https:\/\/www.eclipse.org\/kapua\/","state":"Incubating","provisioned":true},"iot.unide":{"name":"Eclipse Unide","id":"iot.unide","description":"\u003Cp\u003EEclipse Unide provides a lightweight Production Performance Management Protocol (PPMP)\u0026nbsp;server-client implementations (using JSON,\u0026nbsp;REST and other). The core of the protocol are two interface definitions:\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003EPPMP Measurement Interface: This is a public REST API with the purpose of receiving time series and machine data.\u003C\/li\u003E\r\n\t\u003Cli\u003EPPMP Messages Interface: This is a public REST API with the purpose of receiving machine messages.\u003C\/li\u003E\r\n\u003C\/ul\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.unide","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/icon.png","website":"http:\/\/www.eclipse.org\/unide","state":"Incubating","provisioned":true},"iot.iofog":{"name":"Eclipse ioFog","id":"iot.iofog","description":"\u003Cp\u003EThe Eclipse ioFog set of technologies is a fog computing layer that can be installed on any hardware running Linux. Once installed, it provides a universal runtime for microservices to run on the edge. In addition to a common runtime, ioFog also provides a set of useful services including a message bus, dynamic configuration of the microservices, and remote debugging.\u003C\/p\u003E\r\n\u003C!--break--\u003E\r\n\r\n\u003Cp\u003EAutomated interconnection of ioFog instances is provided by the ComSat component. This relieves developers from writing code just to move data from one place to another.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EOrchestration and management of microservices (the edge software) is provided by the ioAuthoring application and the ioFog instances receive their instructions through the fabric controller.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EWorking together, these components provide a full set of technologies for building and running IoT software the executes wherever the developer chooses.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIn greater detail, the fog computing layer is comprised of the following:\u003C\/p\u003E\r\n\r\n\u003Cp\u003E1. A fog computing software agent that runs on various operating systems and provides a universal runtime for IoT microservices. This is called \u0026quot;ioFog\u0026quot;.\u003Cbr \/\u003E\r\n\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv\u003E2. A fog computing node controller that runs on popular Linux distributions and gives dynamic instruction to the ioFog instances. It has an API that allows for various tooling to be built for controlling the fog computing fabric. This is called \u0026quot;Fabric Controller\u0026quot;.\u003Cbr \/\u003E\r\n\u0026nbsp;\u003C\/div\u003E\r\n\r\n\u003Cdiv\u003E3. An internetworking utility that runs on popular Linux distributions and provides a way for ioFog instances to interconnect, even through private network layers and firewalls. This is called \u0026quot;ComSat\u0026quot;.\u003Cbr \/\u003E\r\n\u0026nbsp;\u003C\/div\u003E\r\n\r\n\u003Cdiv\u003E4. A design-time interface for creating, saving, editing, and deploying microservices schemas that are called \u0026quot;tracks\u0026quot;. It runs on popular Linux distributions and uses the Fabric Controller API to do its work. This is called \u0026quot;ioAuthoring\u0026quot;.\u003Cbr \/\u003E\r\n\u0026nbsp;\u003C\/div\u003E\r\n\r\n\u003Cdiv\u003E5. Software Development Kits (SDKs) in multiple programming languages that provide developers with the convenience of programming against objects instead of using the native REST API that exists within the ioFog.\u003Cbr \/\u003E\r\n\u0026nbsp;\u003C\/div\u003E\r\n\r\n\u003Cp\u003E6. A local software development tool that mimics the fog computing runtime and gives developers a way to test their code against simulated situations before making the effort to package their code as a microservice. This is called \u0026quot;Test Message Generator\u0026quot;.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cimg alt=\u0022The ioFabric component architecture\u0022 src=\u0022http:\/\/iotracks.com\/images\/Component_Diagram.png\u0022 style=\u0022height:646px; width:487px\u0022 \/\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.iofog","logo":null,"website":null,"state":"Incubating","provisioned":true},"iot.agail":{"name":"Eclipse Agail","id":"iot.agail","description":"\u003Cp dir=\u0022ltr\u0022\u003EThe Eclipse Agail is a language-agnostic, modular software and hardware gateway framework for the Internet of Things with support for protocol interoperability, device and data management, IoT application execution, trusted data sharing and external Cloud communication.\u003C\/p\u003E\r\n\u003C!--break--\u003E\r\n\r\n\u003Cp dir=\u0022ltr\u0022\u003EA framework both for developers who wish to quickly prototype IoT solutions but also for end users who want to easily customise their gateway based on their context and have full control of their data and devices.\u003C\/p\u003E\r\n\r\n\u003Cp dir=\u0022ltr\u0022\u003EThe hardware framework defines the design of a RaspberryPi shield that comes with various onboard sensors and two Xbee sockets for hosting different wireless communication modules (e.g., ZigBee, LoRaWAN, ZWave, etc.)\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe following image visualises the AGAIL software structure:\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 src=\u0022http:\/\/agile-iot.eu\/wp-content\/uploads\/2016\/12\/AGAIL_Generic.png\u0022 style=\u0022height:291px; width:500px\u0022 \/\u003E\u003C\/p\u003E\r\n\r\n\u003Cp dir=\u0022ltr\u0022\u003EThe Agail software consists of serveral modules that can operate indepdently from each other and implement various features including IoT device discovery and management, data storage \u0026amp; management, IoT workflow development, remote gateway management, communication with external Cloud services and more.\u003C\/p\u003E\r\n\r\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EModularity \u0026amp; Adaptability\u003C\/strong\u003E\u003C\/p\u003E\r\n\r\n\u003Cp dir=\u0022ltr\u0022\u003EAt the software level, different components enable new features: data collection and management on the gateway, intuitive interface for device management, visual workflow editor for creating IoT apps with less coding, and an IoT marketplace for installing IoT apps locally.\u003C\/p\u003E\r\n\r\n\u003Cp dir=\u0022ltr\u0022\u003EAt the deployment level, the software components packaging \u0026amp; delivery is performed through containerization. This choice gives the developers the flexibility to share and install components without worrying about dependencies and conflicts. The containers utilise the internal AGAIL Project API, so access to gateway resources can be monitored and fully controlled by the user.\u003C\/p\u003E\r\n\r\n\u003Cp dir=\u0022ltr\u0022\u003EThe following detailed view illustrates the concept of the containers and the language-agnostic Agail Gateway API for inter-module communication:\u003C\/p\u003E\r\n\r\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cimg alt=\u0022\u0022 src=\u0022http:\/\/agile-iot.eu\/wp-content\/uploads\/2016\/12\/AGAIL_Arch.png\u0022 style=\u0022height:305px; width:800px\u0022 \/\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe Agail software can auto-configure and adapt the essential components, based on the hardware configuration so that driver installation and configuration is performed automatically. IoT apps and workflows can be recommended based on hardware setup, reducing the gateway setup and development time significantly.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.agail","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/agail.png","website":"http:\/\/agile-iot.eu","state":"Incubating","provisioned":true},"iot.ditto":{"name":"Eclipse Ditto","id":"iot.ditto","description":"\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.eclipse.org\/ditto\/\u0022 target=\u0022_self\u0022\u003EEclipse Ditto website\u003C\/a\u003E\u003C\/p\u003E\r\n\r\n\u003Ch3\u003EScope\u003C\/h3\u003E\r\n\r\n\u003Cp\u003EEclipse Ditto is the open-source project of Eclipse IoT that provides a ready-to-use functionality to manage the state of Digital Twins. It provides access to them and mediates between the physical world and this digital representation.\u003C\/p\u003E\r\n\r\n\u003Ch3\u003EDevice-as-a-Service\u003C\/h3\u003E\r\n\r\n\u003Cp\u003EIoT solutions have to interact with a heterogeneous set of device types, device protocols and communication patterns.\u003C\/p\u003E\r\n\r\n\u003Cp\u003ETo bring back simplicity to IoT developers, Eclipse Ditto exposes a unified resource-based API that can be used to interact with devices, abstracting from the complexity of different device types and how devices are connected. It helps to structure the devices\u003Cem\u003E \u003C\/em\u003Einto their distinct aspects of functionality and can optionally enforce data types and data validation based on a formal device meta model (Eclipse Vorto).\u003C\/p\u003E\r\n\r\n\u003Cp\u003EAs devices are equipped with a public API (potentially public on the Internet), it is crucial to define on a device level which individuals are allowed interact with the devices. Ditto ensures that access to the device API is only granted for authorized individuals. Authentication is not scope of Ditto and delegated to existing identity providers.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EWith this approach your devices are turned into services with a hosted, always accessible and available API.\u003Cbr \/\u003E\r\nDevices managed by Ditto are usable as easy as any of the other services (like weather, maps, ...) within your application.\u003C\/p\u003E\r\n\r\n\u003Ch3\u003EState management for Digital Twins\u003C\/h3\u003E\r\n\r\n\u003Cp\u003EA digital representation of physical devices consists at its heart of the state these devices.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EFor IoT solutions the following information regarding state is most relevant:\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003EDevice and sensor properties like temperature, location, level, fault information, etc.\u003C\/li\u003E\r\n\t\u003Cli\u003EConfiguration properties of sensors and actors like thresholds, intervals, ranges, toggles and limits, etc.\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003EA good representation of this state in a Digital Twin should support different perspectives for these properties:\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003EReported property values based on the last transmission to the back end\u003C\/li\u003E\r\n\t\u003Cli\u003EDesired target property value for configuration properties\u003C\/li\u003E\r\n\t\u003Cli\u003ELive perspective reflecting the properties values at the current point of time\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003EThe state management provides access to all three different perspectives and helps in synchronizing between them.\u003C\/p\u003E\r\n\r\n\u003Ch3\u003EOrganize your set of Digital Twins\u003C\/h3\u003E\r\n\r\n\u003Cp\u003EWhen interacting with huge amounts of devices, it can get difficult to keep track of which devices and devices types are there and how they are related (e.g. spatially).\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIt is wise to add meta data like e.g. manufacturer, model information, static geographic location, serial number or software version to devices in order to find them again later.\u003Cbr \/\u003E\r\nThat meta data as well as the state data is automatically indexed by Ditto which leads to fast search responses provided by the search API, even when there are millions of devices to search in.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EWhen working with sets of devices authorization information is used to determine the visibility of devices to individuals and control who can change device data.\u003C\/p\u003E\r\n\r\n\u003Ch3\u003EFeatures at a glance\u003C\/h3\u003E\r\n\r\n\u003Cp\u003EThe described functionality is offered by Ditto in form of the following features:\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003EUnified resource-based HTTP JSON API representing devices\u003C\/li\u003E\r\n\t\u003Cli\u003EDefinition of a simple \u0026quot;Digital Twin State Management Protocol\u0026quot; using JSON for command- and events-based interaction with devices\u003C\/li\u003E\r\n\t\u003Cli\u003EWebsocket API based on this protocol in addition to the resource-based HTTP API\u003C\/li\u003E\r\n\t\u003Cli\u003EManaging device meta data via APIs\u003C\/li\u003E\r\n\t\u003Cli\u003EOptionally configure and enforce a schema for device state (via Eclipse Vorto)\u003C\/li\u003E\r\n\t\u003Cli\u003ESchema evolution support for schema based device state\u003C\/li\u003E\r\n\t\u003Cli\u003EAccessing and setting different state perspectives\r\n\t\u003Cul\u003E\r\n\t\t\u003Cli\u003ELive\u003C\/li\u003E\r\n\t\t\u003Cli\u003EReported\u003C\/li\u003E\r\n\t\t\u003Cli\u003EDesired\u003C\/li\u003E\r\n\t\u003C\/ul\u003E\r\n\t\u003C\/li\u003E\r\n\t\u003Cli\u003ENotification about changes of device resources via HTTP Server-sent events (SSE)\u003C\/li\u003E\r\n\t\u003Cli\u003EAuthorization\/Access control at device API enforcing that only allowed individuals may read\/write\u003C\/li\u003E\r\n\t\u003Cli\u003ESearch HTTP API accepting predicate-based query language\u003C\/li\u003E\r\n\t\u003Cli\u003EEmit events resulting from state changes of devices which can be used\r\n\t\u003Cul\u003E\r\n\t\t\u003Cli\u003Efor building up a \u0026quot;transaction log\u0026quot; (e.g. using Apache Kafka)\u003C\/li\u003E\r\n\t\t\u003Cli\u003Eas source for stream processing (e.g. via Apache Spark Streaming)\u003C\/li\u003E\r\n\t\t\u003Cli\u003Efor building up additional persistence representations (e.g. into an InfluxDB providing optimized access to the history of a device\u0026#39;s state properties)\u003C\/li\u003E\r\n\t\t\u003Cli\u003Efor transmitting data into data analytic tools (e.g. into an Apache Hadoop HDFS)\u003C\/li\u003E\r\n\t\u003C\/ul\u003E\r\n\t\u003C\/li\u003E\r\n\t\u003Cli\u003EOut-of-box integration with Eclipse Hono for communication with devices using standard or custom device protocols\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Ch2\u003EIntegrate Ditto in a IoT landscape\u003C\/h2\u003E\r\n\r\n\u003Cp\u003EDitto is especially useful in the context of a larger IoT landscape. In this landscape the other important aspects of a IoT solution like device communication or data analytics are covered by distinct components.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe following diagram shows a typical landscape for IoT solutions where Ditto brings in its functionality:\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 src=\u0022data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAA6IAAAIWCAYAAABN1DBQAAAgAElEQVR4nO3d369sWVnw+0r8R4zv1XuJvDdH6IVX5yQqvGJjNAdpiKIhEvS1kR9h2UmTRUsa+ZkYDwnGpqWR450JBjEEJfwweRMTAkbNiRgjXPFeoCTERO2957k4Z2ntop6qOWuMMccza3y+yTe991pVs6rGM\/eu8e251l67CQAAAACAFdn1fgIAAAAAgLEQogAAAACAVRGiAAAAAIBVEaIAAAAAgFURogAAAACAVRGiAAAAAIBVEaIAAAAAgFURogAAAACAVRGiAAAAAIBVEaIAAAAAgFURogAAAACAVRGiAAAAAIBVEaIAAAAAgFURogAAAACAVRGiAAAAAIBVEaIAAAAAgFURogCAIdjtzr\/l7Xa70Dm3r\/lcDm+35PgAAGTHuxoAYAiWhty52x\/7\/CWBWeN2AABsDe9wAIAhOIy6OVc7lxxvyWOcutJ5\/\/vD+y499tKrtAAArIl3KADAEMyJv3MfK\/l89PiX3O7cfXxJLwAgO96dAABDUDtE728z56rnqcdvEaJLXwcAAGvj3QkAMAQtQvTSxxCiAIDR8e4EABiCNb40V4gCADAP704AgCEQogAA5MG7EwBgCGr\/q7mHx4jCdO73jx67bcm\/mrvkdQAAsDbenQAAAAAAqyJEAQAAAACrIkQBAAAAAKsiRAEAAAAAqyJEAQAAAACrIkQBAAAAAKsiRAEAAAAAqyJEAQAAAACrsskQ\/cIXvkCSJEmSbGRrNhmiu91uesUrXkGSJEmSrOxu1z4TNxuiAAAAAID6CNEAIQoAAAAAbRCiAUIUAAAAANogRAOEKAAAAAC0QYgGCFEAAAAAaIMQDRCiAAAAANAGIRogRAEAAACgDUI0QIgCAAAAQBuEaIAQBQAAAIA2CNEAIQoAAAAAbRCiAUIUAAAAANogRAOEKAAAAAC0QYgGCFEAAAAAaIMQDRCiAAAAANAGIRogRAEAAACgDUI0QIgCAAAAQBuEaIAQBQAAAIA2CNEAIQoAAAAAbRCiAUIUAAAAANogRAOEKAAAAAC0QYgGCFEAAAAAaIMQDRCiAAAAANAGIRogRAEAAACgDUI0QIgCAAAAQBuEaIAQ7cfTTz\/9cLfbTZFPP\/30w2maQt3f\/d3f\/d3f\/d3f\/WfeH0AndjshepQ1FgYh3hgAAEBr7DeAjgjRACHaFW8MAACgNfYbQEeEaIAQ7Yo3BgAA0Br7DaAjQjRAiHbFGwMAAGjK\/\/89owA6IUQDhGhXvDEAAICm2OsBfRGiAf5y6ooQBQAATbHXA\/oiRAP85dQVIQoAAJpirwf0RYgG+MupH75nAwAAtMZeD+iLEA3wl1M\/rD0AAGiN\/QbQFyEa4C+nflh7tODm5ubhbrebSJLb9ObmpupXTO12ffYbj9085v2I3Xzs5rE0X3m42wnRo6yxMDiOtUcLdrvd9M1vfpMkuVFr7w967Td2u930\/\/yvvyK7mGmfLUQDMg1pNKw9WiBESXLb1t4f9Po3KYQoe5ppny1EAzINaTSsPVogREly2zbYHwhRDmemfbYQDcg0pNGw9miBECXJbStEyXIz7bOFaECmIY2GtUcLhChJblshSpabaZ8tRAMyDWk0\/BxRtECIkuS2FaJkuZkaR4gGZBrSgAhRVEeIkuS2FaJkuZkaR4gGZBrSgAhRVEeIkuS2FaJkuZkaR4gGZBrSgAhRVEeIkuS2FaJkuZkaR4gGZBrSgAhRVEeIkuS29XNEyXIzNY4QDcg0pAERoqiOEOVSd7vd91njmDWfX83HmHu\/\/dv5c8U1rb0367XXE6LsaabGEaIBmYY0IEIU1bFh5lKPnTOZzqNjcVwSzJeEKLmmQpQsN1PjCNGATEMaECGK6tg8c6lzrzgeu2J67Dan7nvsMc5F5dwQPXWs\/Y\/PvV\/0OvePs\/SxyDkKUbLcTI0jRAMyDWk0\/BxRtMDGl0udE6JLgvPUfeccM3oe0X\/PHevw15feb84xTt2OnKsQJcvN1DhCNCDTkEbD2qMFNr5cakmI7v96bnDOOeaxj9cI0Us\/V+N45FyFKFlupn22EA3INKTRsPZogY0vlzo3RA89vN0lIRod89jzaBWi515Xrcci5ypEyXIz7bOFaECmIY2GtUcLbHy51EuuiB67XekV0bnHb3lFdM7thChbK0TJcjPts4VoQKYhjYa1RwtsfLnUY+fMuaBa8vtLgq7msXp9ae6pq7zkKWvvD\/wcUY5opn22EA3INKTRsPZogY0vl7rkS2Sjz88J0+h+54JtSRDOeZy597s0oPeP5c8jL7HB\/kCIcjgz7bOFaECmIY2GtUcLbHzJPPrzyEsUomS5mfbZQjQg05BGw9qjBTa+ZD\/nXFkmzylEyXIz7bOFaECmIY2GnyOKFtj8kuS2FaJkuZkaR4gGZBrSgAhRVEeIkuS2FaJkuZkaR4gGZBrSgAhRVEeIkuS2FaJkuZkaR4gGZBrSgAhRVEeIkuS2FaJkuZkaR4gGZBrSgAhRVEeIkuS29XNEyXIzNY4QDcg0pAERoqiOECXJbVt7b9ZrrydE2dNMjSNEAzINaUCEKKojREly2wpRstxMjSNEAzINaUCEKKojREly2wpRstxMjSNEAzINaTT8HFG0QIiS5LYVomS5mRpHiAZkGtJoWHu0QIiS5LYVomS5mfbZQjQg05BGw9qjBUKUJLetECXLzbTPFqIBmYY0GtYeLRCiJLlthShZbqZ9thANyDSk0bD2aIEQJclt6+eIkuVm2mcL0YBMQxoNa48WCFGS3LYN9gdClMOZaZ8tRAMyDWk0rD1aIERJctsKUbLcTPtsIRqQaUijYe3RAiFKkttWiJLlZtpnC9GATEMaDT9HFC0QoiS5bYUoWW6mxhGiAZmGNCBCFNURoiS5bYUoWW6mxhGiAZmGNCBCFNURotuxZFbmXLZmrdevxvFrPl\/ny7YUomS5mRpHiAZkGtKACFFUx4ZzGwqLba\/\/Gsev\/RydM9tRiJLlZmocIRqQaUgDIkRRHZvNbXg4p91u9x8eu+2x20efO3W86H5Lj3Puc6de87HHrfX6lhyz9HlEr3vJ8ec8dvTrOefLmleBWc\/aezM\/R5QjmqlxhGhApiENiBBFdWw283suaM4FyP2v59xuzv0uPc6p1xC97pLnWfq8StdryWtu\/Xwvud3cObG\/tfdmvfZ6QpQ9zdQ4QjQg05AGRIiiOjaa+b00aOYeoyQgL42rGq+7drzNff6XPNa5198znC+dL\/MoRMlyMzWOEA3INKQBEaKojo1mfi\/98sxTHz92JezYMZeGSnScU8957uu+9Hkuec5zjiFEmU0hSpabqXGEaECmIY2GnyOKFtho5rckYqKPX3JVcOlxLrlyu+SxWz8vISpEt6IQJcvN1DhCNCDTkEbD2qMFNpr5vTQGa8fN0se+NAYvfeyWr\/3S413yWns933NXhZlXIUqWm2mfLUQDMg1pNKw9WmCjuQ2PBcKxcNj\/3Ln7zznepccpeYxTHz93jHNrcskxjx13yWs5F6pLjr\/k+ZbOzN8N21GIkuVm2mcL0YBMQxoNa48W2Gxuw2ueU43Xlnl9thR3W3qufHRutd8XeiBE2dNM+2whGpBpSKNh7dECm83teK2zuuYQzf6lrvtXV0Xodq29P\/BzRDmimfbZQjQg05BGw9qjBTacJLltG+wPhCiHM9M+W4gGZBrSaFh7tECIkuS2FaJkuZn22UI0INOQRsPaowVClCS3rRAly820zxaiAZmGNBp+jihaIERJctsKUbLcTI0jRAMyDWlAhCiqI0RJctsKUbLcTI0jRAMyDWlAhCiqI0RJctsKUbLcTI0jRAMyDWlAhCiqI0RJctsKUbLcTI0jRAMyDWlAhCiqI0RJctv6OaJkuZkaR4gGZBrSgAhRVEeIkuS2rb0367XXE6LsaabGEaIBmYY0IEIU1bm5uXm42+0mkuQ2feyxx6ruD3Y7Icrx7HXeH2ON55Ln1S4g05AGRIgCAICmCFGOaKbGEaIBmYY0Gn6OKAAAaI0Q5YhmahwhGpBpSKNh7QEAQGuEKEc00z5biAZkGtJoWHsAANAaIcoRzbTPFqIBmYY0GtYeAAC0RohyRDPts4VoQKYhjYa1BwAArfFzRDmimfbZQjQg05BGw9oDAIAVEKIczkz7bCEakGlIo2HtAQDACghRDmemfbYQDcg0pNGw9gAAYAWEKIcz0z5biAZkGtJo+DmiAABgBYQohzNT4wjRgExDGhAhCgAAWiNEOZyZGkeIBmQa0oAIUQAA0BohyuHM1DhCNCDTkAZEiAIAgNYIUQ5npsYRogGZhjQgQhQAADTFzxHliGZqHCEakGlIAyJEAQBAU3rt9YQoe5qpcYRoQKYhDYgQBQAATRGiHNFMjSNEAzINaUCEKAAAaIoQ5YhmahwhGpBpSKPh54gCAIDWCFGOaKbGEaIBmYY0GtYeAAC0RohyRDPts4VoQKYhjUbttb+5uXm42+0mbsubm5uqV8Z\/5OWvcB6Q5Ib9kZe\/our7wm4nRDmevc77Y6zxXPK82gVkGtJo1F773W43ffOb3+TGbHEevPDF75EkN2qL94UeCFH2NFPjCNGATEMaDSFKIUqSPLT2+4KfI8oRzdQ4QjQg05BGQ4hSiJIkD22wNxOiHM5MjSNEAzINaTSEKIUoSfJQIUqWm6lxhGhApiGNhhClECVJHipEyXIzNY4QDcg0pNGo\/T0bQnSbClGS5L5ClCw3U+MI0YBMQxoQIUohSpJ8RCFKlpupcYRoQKYhDYgQpRAlST6iECXLzdQ4QjQg05AGRIhSiJIkH1GIkuVmahwhGpBpSAMiRClESZKP6OeIkuVmahwhGpBpSAMiRClESZKP2OJ9oQdClD3N1DhCNCDTkAZEiFKIkiQfUYiS5WZqHCEakGlIAyJEKURJko8oRMlyMzWOEA3INKTR8HNEKURJkocKUbLcTI0jRAMyDWk0WrzR9I4qClGSZJlClCw3U+MI0YBMQxoNIUohSpI8VIiS5WZqHCEakGlIoyFEKURJkocKUbLcTI0jRAMyDWk0hCiFKEnyUD9HlCw3U+MI0YBMQxoNIUohSpI8tMHeTIhyODM1jhANyDSk0RCiFKIkyUOFKFlupsYRogGZhjQaQpRClCR5qBAly83UOEI0INOQRsPPEaUQJUkeKkTJcjM1jhANyDSkARGiFKIkyUcUomS5mRpHiAZkGtKACFEKUZLkIwpRstxMjSNEAzINaUCEKIUoSfIRhShZbqbGEaIBmYY0IEKUQpQk+Yh+jihZbqbGEaIBmYY0IEKUQpQk+Ygt3hd6IETZ00yNI0QDMg1pQIQohShJ8hGFKFlupsYRogGZhjQgQpRClCT5iEKULDdT4wjRgExDGg0\/R5RClCR5qBAly83UOEI0INOQRqPFG03vqKIQJUmWKUTJcjM1jhANyDSk0RCiFKIkyUOFKFlupsYRogGZhjQaQpRClCR5qBAly83UOEI0INOQRkOIUoiSJA\/1c0TJcjM1jhANyDSk0RCiFKIkyUMb7M2EKIczU+MI0YBMQxoNIUohSpI8VIiS5WZqHCEakGlIoyFEKURJkocKUbLcTI0jRAMyDWk0\/BxRClGS5KFClCw3U+MI0YBMQxoQIUohSpJ8RCFKlpupcYRoQKYhDYgQpRAlST6iECXLzdQ4QjQg05AGRIhSiHJod7vdI77kZT82vfODn\/6+z7\/wxe9N733uf07\/++Nv+o\/PHf6evBaFKFlupsYRogGZhjQgQpRClEO7H5ovfPF7039\/3dun3W43vfe5\/3n2toe\/J6\/F2u8Lt7e3QpTDmalxhGhApiENiBClEOXQHsbkB\/\/v\/2\/z8N9f9\/ZHPn\/O+\/u\/4ckPTf\/lv\/63abfbTW948kPdXx95iS3eF3ogRNnTTI0jRAMyDWlAhCiFKIf22FXN\/Y9Fvz72+zfdfmza7XbT\/3jmU9P\/eOZT0263m950+7Hur5FcqhAly83UOEI0INOQBkSIUohyaGuG6Ete9mPf9\/mXvOzHur9GcqlClCw3U+MI0YBMQxqN2t+zIUS3qRDlyNYMUd9DymtRiJLlZmocIRqQaUij0eKNpndUUYiSS5z7PaLHbuuKKK9VIUqWm6lxhGhApiGNhhClEOXoRv9q7tP\/15993+d9jyhHUYiS5WZqHCEakGlIoyFEKUQ5uof\/+u1LXvZj\/xGh+59\/4Yvfm975wU9Pu91uevn\/8X8e\/f0LX\/zPfzX3v\/zX\/+ZfzeVmFaJkuZkaR4gGZBrSaAhRClGS5KG13xfu7u4eVD3gTIQoe5qpcYRoQKYhjYYQpRAlSR7aYG9W9R9HnIsQZU8zNY4QDcg0pKV84xvfmD7zmc9Mn\/jEJ6bnnntueuGFF6Y\/+ZM\/mf7+7\/++91ObhRClECVJHipEyXIzNY4QDcg0pDl87Wtfm97znvdMP\/MzPzO9\/vWvn97xjndMzzzzzPTss89OzzzzzPS2t71teuKJJ6af\/dmfnZ555pnpa1\/7Wu+nHCJEKURJkocKUbLcTI0jRAMyDekU\/\/AP\/zD92q\/92vSLv\/iL0yc\/+cnp29\/+9snbf\/vb355eeOGF6Y1vfOP05JNPTv\/4j\/+40jOdT+3v2RCi21SIkiT3FaJkuZkaR4gGZBpSxO\/+7u9Or3\/966c\/\/\/M\/v+j+n\/\/856fXve5103PPPVf1eVWg6huDEN2mQpQkua8QJcvN1DhCNCDTkI7xgQ98YPrQhz5U5Vgf\/OAHp4985CNVjlUJIUohSpJ8RCFKlpupcYRoQKYhHfKRj3xket\/73lf1mO9973szxagQpRAlST6iECXLzdQ4QjQg05D2efbZZ6ff\/\/3fb3Ls5557bnr\/+9\/f5NgLEaIUoiTJR6z9vnB7eytEOZyZGkeIBmQa0j2f\/vSnp3e9611NH+Od73zn9NnPfrbpY8xAiFKIkiQfscX7Qg+EKHuaqXGEaECmId3zUz\/1U9O\/\/du\/NX2Mf\/mXf5kef\/zxpo8xAyFKIUqSfEQhSpabqXGEaECmIU3TNP32b\/\/29Du\/8ztX91gBQpRClCT5iEKULDdT4wjRgExDmqZpes1rXjN973vfW+Wx\/vmf\/3n66Z\/+6VUe6xi1v2dDiG5TIUqS3FeIkuVmahwhGpBpSJ\/73Oemt771ras+5pNPPjn92Z\/92aqPeU+LN5reUUUhSpIsU4iS5WZqHCEakGlIzzzzzPSJT3xi1cd8\/vnnp2effXbVx7xHiFKIkiQPFaJkuZkaR4gGZBrSL\/3SL01f\/epXV33Mv\/zLv5ze9KY3rfqY9whRClGS5KFClCw3U+MI0YBMQ3r88cen7373u6s+5ne+851u3ycqRClESZKH1n5fuLu7e1D1gDMRouxppsYRogGZhvTjP\/7jq\/\/A5RdffHF65StfufbDTtMkRClESZLfb4O92er7q2kSouxrpsYRogGZhvQTP\/ETq\/8fuwcPHghRClGSZBqFKFlupsYRogGZhvTqV796tR\/dcs8\/\/dM\/TY8\/\/viqj3mPEKUQJUkeKkTJcjM1jhANyDSkX\/iFX5i+\/vWvr\/qYX\/3qV6c3vvGNqz7mPbW\/Z0OIblMhyrWNzpH9j889j0rvM+fjS49Te11aPy55qBAly83UOEI0INOQnn766ekP\/\/APV33MT37yk9N73vOeVR9zj6pvDEJ0mwpRrump86P03Fk7RNdcm0zPk9evECXLzdQ4QjQg05A+\/elPT+9617tWfcx3vvOd02c+85lVH3MPIUohylU9PD92u91\/fOzU1c1zt7v\/\/OHnDj927NiHtz13+znP49wazHmuJR+b8zkyUoiS5WZqHCEakGlI0zRNP\/mTP7naY\/37v\/\/79OpXv3q1xzuCEKUQ5WqeCrxjcVV6u1OPder5XRqiSx6j1vNf8jr92eRchShZbqbGEaIBmYY0TdP07LPPTh\/\/+MdXeazf+73fmz7wgQ+s8lgBQpRClKs5N\/BO\/XrJ7ebc59xtov8ueY5zPn7p878kuMlz1n5fuL29FaIczkyNI0QDMg1pmqbpX\/\/1X6fXvOY1qzzWq1\/96unFF19c5bEChCiFKFdz7RCNvty2Z4gePq9z63Hu+R\/e5tQxes+f27HF+0IPhCh7mqlxhGhApiHd86lPfWr6zd\/8zaaPcXd3t\/o\/jHQEIUohytVcM0RLvjR3\/9ctQrTVa166\/mSkECXLzdQ4QjQg05D2+Y3f+I3pj\/\/4j5sc+4\/+6I+mp556qsmxFyJEKUS5mjVC9NzVwaX3ufT5nXq8Sx+j9DVf+pzIQ4UoWW6mxhGiAZmGdMjb3\/726ROf+ETVY3784x+f3vGOd1Q95qXU\/p4NIbpNhSjX9NIvn93\/\/JJgO3ef6DGi5xD9vtaX5s59\/tGX5y55rN7nAvMqRMlyMzWOEA3INKRjPPXUU9Pzzz9f5VjPPffc9O53v7vKsWrQ4o2md1RRiDK3Nc4P51iOOfB6FaJkuZkaR4gGZBpSxPve977pV3\/1V6e\/+7u\/u+j+f\/u3fzv9yq\/8yvT+97+\/8jMrQ4hSiLKHS8+R6Kop15sBx1KIkuVmahwhGpBpSKf48pe\/PL3hDW+Y3va2t02f+9znZt3nT\/\/0T6df\/\/Vfn37+539++spXvtL4GS5HiFKIkiQPFaJkuZkaR4gGZBrSHD772c9OTz755PTKV75yestb3jI9++yz00c\/+tHp4x\/\/+PTRj350eu973zu95S1vmV71qldNb33rW6fPfvazvZ9yiBClECVJHlr7feHu7u5B1QPORIiyp5kaR4gGZBrSEh48eDB9+ctfnp5\/\/vnpwx\/+8PTss89OH\/7wh6fnn39++tKXvjQ9fNjlZzcvQohSiJIkD22wN+uyKRKi7GmmxhGiAZmGNBpClEKUa1pybjivrC3XU4iS5WZqHCEakGlIoyFEKUS5ps6NvJoN9xWiZLmZGkeIBmQa0mjU\/p4NIbpNhShbGv0szP3Pzfl5nOd+5uapY557bi2PU+Mx99eg1fr4c8t9hShZbqbGEaIBmYY0IFXfGIToNhWibOVhYF4anMeOde7Xx35\/6nMtjlPrMc\/FfK318WeX9wpRstxMjSNEAzINaUCGCNH9KwD31jhm79clRJndkvA6dfvoHCsJqznHv+Q1X\/q5pdFeY3382eW9QpQsN1PjCNGATEMakGFC9JpDUogyq3Ou8h37UtGS0Dp2zFNfjjrnc6c+Fh1nyXHnrker9Tl3P46nECXLzdQ4QjQg05AGZNgQPfbxY1dMj93m1H2PPUatq7BClFtzyVW+Y7crveJ36XNbctw1rsK2uiJasn68bmu\/L9ze3gpRDmemxhGiAZmGNCBC9ILgPHXfOcfMphBlK5eE6JLfzw2wuXE39wrk0uPUWo9jx2yxPv7s8t4W7ws9EKLsaabGEaIBmYY0IEJ0RjQuic9Tj5t5fWqfB703UczjuS8FjeJtTjRF9zsXhMeOseS5LTnOkud3ap1ar48\/t9xXiJLlZmocIRqQaUgDIkT3fn1ojRCNjplJIUrSn1vuK0TJcjM1jhANyDSk0aj9PRuZQ2tOiJ67f+kV0awKUXJs\/ZnloUKULDdT4wjRgExDGo0WbzS9o2puEJ77stklv58bqJnXp\/Z50HsTRZK8XCFKlpupcYRoQKYhjcZIITrnS2RPfX5OmEb3y\/xluUKUJHmoECXLzdQ4QjQg05BGY5QQpRAlSc5XiJLlZmocIRqQaUijIUQpREmSh9Z+X7i7u3tQ9YAzEaLsaabGEaIBmYY0GkKUQpQkeWiDvVnVfxxxLkKUPc3UOEI0INOQRkOIUoiSJA8VomS5mRpHiAZkGtJoCFEKUZLkoUKULDdT4wjRgExDGo3a37MhRLepECVJ7itEyXIzNY4QDcg0pAGp+sZwaYhu4UeczH0dte6\/5loIUZLkvkKULDdT4wjRgExDGpDuIXru53OOZK\/XLkRJkvsKUbLcTI0jRAMyDWlAuoZodPtjcXrsiun97w8\/V+u2x34fHefU8z72+qLnsX\/8kjUQoiTJSxWiZLmZGkeIBmQa0oCkDNElUXju95fedsljXvrrWvcp\/ZJeIUqS3Lf2+8LTTz8tRDmcmRpHiAZkGtKAbD5E177tJSE59\/WVxqsQJUnWsMX7Qg+EKHuaqXGEaECmIQ2IEO0QovtfZitESZLZFKLbdX9\/UfOYvV\/XFs3UOEI0INOQBiRliNaKsIwh2uJLc4UoSbKmQnSbHr7eWq9\/tHWsOY8sCNGATEMajdrfs3FpBF36+62E6KlfC1GSZDaF6PaMXuv+x8+F6rGrqXM\/tn+86Pa916jHTLIgRAMyDWk0WrzRLI2g\/SA7dRXx2OdbhejhY5ZE4bHXtP\/xKExPPZ8lr0OIkiSXKkS355zXeipE537u3O3O\/b73Oq09kywI0YBMQxqNLCHKvgpRkuS+QnR71g7RubdbesW19zqtPZMsCNGATEO6lL\/5m795+KM\/+qMP\/\/qv\/7rLP09+KUKUQpQkeagQ3Z6lIXr\/+1NfcnvuGEL0+9c7C0I0INOQLuXNb37zw4997GMPfvmXf1mIJggrClGS5OXWfl\/wc0TXiZ5zH18Shpd+ae6p4480j\/vXmwUhGpBpSJfwV3\/1Vw+feOKJh9M0TU888cTDr3\/965uJUSFKIUqSPLTB3kyIrhQ+l\/6+1veILnn8azdT4wjRgExDuoQ3v\/nND7\/yla88nKZp+ou\/+IuHW7oqKkQpREmShwrR7Rp9ee2xzy\/50txj\/whRSfiOYKbGEaIBmYa0lP2rofds6aqoEKUQJUkeKkTJcjM1jhANyDSkpexfDb1nS1dFM\/wcUfZXiJIk9xWiZLmZGkeIBmQa0hKOXQ29Z0NXRYUohShJ8hGFKFlupsYRogGZhrSEY1dD79nQVVEhSiFKknxEIUqWm6lxhGhApiHN5dTV0Hs2clVUiFKIkiQfUYiS5WZqHCEakGlIczl1NfSejVwVFaIUoiTJR\/RzRMlyMzWOEA3INKQ5zL6ut\/wAACAASURBVLkaes8GrooKUQpRkuQjtnhf6ME1hmjN13TqZ4D2PNa1mKlxhGhApiHNYc7V0Hs2cFVUiFKIkiQfUYjm9P711HpdraKW\/7kmWRCiAZmGdI4lV0PvSX5VVIhSiJIkH1GI5jQK0f2PX\/K56JjH1u\/+44f33f9YdKwlz+0azNQ4QjQg05DOseRq6D2Zr4r6OaIUoiTJQ4VoTs+FXhSYpz536a9r3eeav6Q3U+MI0YBMQzrFJVdD78l6VbTFG03vqKIQJUmWKUTzufRqZs14nPOcSuN1yeNuxUyNI0QDMg3pFJdcDb0n61VRIUohSpI8VIjmc\/\/LW89dSWwZonOegxAVopsh05AiSq6G3pPxqqgQpRAlSR4qRPOZ4Ypoiy\/NPXX8rZupcYRoQKYhRZRcDb0n41VRIUohSpI8tPb7gp8jWjdCDz\/e43tEXREVot\/3GM0foQGZhnSMGldD78l2VfQaQrT2Y7Z8DVlDXYiSJPdtsDcTooVBc+rjUZDO\/VwUhcced\/\/jUZhGxzoXntcyr\/3XkwUhGpBpSMeocTX0nmxXRbceoi0eT4jWOQ96b6JIkpcrRLflue\/p7P38RjVT4wjRgExDOqTm1dB7Ml0VvaYQvf\/1\/f9xO3a7w9sf3nbuxw4\/F308eh5zjr3lEP2Rl7\/i4f5rI0luy\/\/tZTe19ylCtHHwXPI5tp9LFtZ4Lnle7QIyDemQmldD78l0VXTLP0f08LHu3zyjSI0+FwXtpberceythygAAAcIUQ5npv2VEA3INKR9WlwNvSfRVdGrCtE5AdgiRGscu6dZ\/wwCAK4GIcrhzLS\/EqIBmYa0T4urofckuioqRDuF6P3vD6\/WClEAwBUiRDmcmfZXQjQg05DuaXk19J4kV0WFaMcQPXU\/IQoAuCKEKIcz0\/5KiAZkGtI9La+G3pPkquhVheil34\/pe0Tz\/RkEAFwPfo4oRzTT\/kqIBmQa0jStczX0ngRXRTcbolHYHftS12PPK\/qy2GNBG3357LmPzwnguc9XiAIAtkqv9xkhyp5m2l8J0YBMQ5qmda6G3pPgqujVheg1KEQBANeEEOWIZtpfCdGATENa82roPZ2vim46RPejTYgKUQBAToQoRzTT\/kqIBmQa0utf\/\/qH73nPex78wR\/8wcO1fOaZZx488cQTD3q83i3\/HFEKUQDANhCiHNFM+yshGpBlSC+++OLDz3\/+8w9+67d+6+Hafv7zn3\/w4osvrn5VtPbaC9FtmuXPIADgOhGiHNFM+yshGpBpSKMhRClEAQCtEaIc0Uz7KyEakGlIoyFE63w\/5iX\/aFKmtfJnEADQEiHKEc20vxKiAZmGNBpCtH6Irvm4QhQAsAX8HFGOaKb9lRANyDSk0dhiiJ76uZuX\/PzPpT\/b89zPGb30Z4Weer5CFACwcYQohzPT\/kqIBmQa0mhsLUSjL4E9Foct7nfqOOd+fenthCgA4AoQohzOTPsrIRqQaUijseUQPfXxuQHY4nOn1uCS+whRAMAVIEQ5nJn2V0I0INOQRmNrP0d0SYgeOjcoL73f3Ocy53ZCFABwZQhRDmem\/ZUQDcg0pAG52hCde4xLrmbODdFajyVEAQAbR4hyODPtr4RoQKYhDchmQ3TJ91j2+tLcS77HVIgCAK4QIcrhzLS\/EqIBmYY0IJsK0WNBF4XbqS91jb5c9tT95nxJb3S7Y5+79HGFKABggwhRDmem\/ZUQDcg0pAHZXIiO5hZD9Dvf+c70jW98g0n8zne+U3W+wDXh76t1\/t7wc0Q5opkaR4gGZBrSgAjR5G4xRF\/ykpc8\/MEf\/MGJOXzJS15y8Z\/zY\/+AF8udw83NzcPezzOjNzc3Vd+3\/H1V\/++NY8w972uz2wlR9rPXeX+MNZ5Lnle7gExDGhAhyup\/Bp0HuSyZr1n2m4e1L1s\/53i+de6BEGVPMzWOEA3INKQBEaK0sbtyhWguheg66+ccz7fOPRCi7GmmxhGiAZmGNBpb+zmi3M6Go\/drYp35mmW\/eVj7svVzjudb5x4IUfY0U+MI0YBMQxoNb+jrvJn3vH+vDUfvdWed+Zplv3lY+7L1c47nW+ceCFH2NFPjCNGATEMaDW\/o27D1ujoPrlshmkshus76OcfzrXMPhCh7mqlxhGhApiGNxpbe0O+Pff8vJ+5\/\/Njj7v8ri2t+bv+5Rr8uOcZWNhy9N1GsM1+z7DcPa1+2fs7xfOvcAyHKnmZqHCEakGlIo7GlN\/RzAXoq3Nb83LnnNec5HwvV1mu7lfOA687XLPvNw9qXrZ9zPNc6+zmiHNFMjSNEAzINaTS29IZ+LswuDcpTx5z7fJZE6iXHWPrcem84bOxyKURzKUTXWT\/neK51nir\/K\/1zEaLsaabGEaIBmYY0Glt6Q18aooce3rb0S3OFaJ\/zgOvO1yz7zcPal62fczzXOk9ClAOaqXGEaECmIY3Glt7QS66ILjnu3GMK0T7nAdedr1n2m4e1L1s\/53iudZ6EKAc0U+MI0YBMQxqNLf0c0VZfmntpUF76uUuOf+y+mTccNna5FKK5FKLrrJ9zPNc6T0KUA5qpcYRoQKYhDchVhuj970u\/\/Db63KnHO\/zc0que546xhQ2HjV0uhWguheg66+ccz7XOkxDlgGZqHCEakGlIA7KZEN2SNdZBiDLDfM2y3zysfdn6OcdzrfMkRDmgmRpHiAZkGtKACNFKb9inrqSWHGONNbWxu26FaC6F6Drr5xzPtc6TEOWAZmocIRqQaUgDIkRpY3flCtFcCtF11s85nmudb29vhSiHM1PjCNGATEMaECFKG7srV4jmUoius37O8Xzr3AMhyp5mahwhGpBpSAMiRGljd+UK0VwK0XXWzzmeb517IETZ00yNI0QDMg1pQIQobeyuXCGaSyG6zvo5x\/Otcw+EKHuaqXGEaECmIX33u999+K1vfWt1v\/vd73b53ona37PhDX2b2thdt0I0l0J0nfVzjudb5x4IUfY0U+MI0YBMQ3rta1\/78FWvetXqvva1r+32Tfy1j9f7zZM5Nhy9XxPrzNcs+83D2petn3M83zr3QIiyp5kaR4gGZBrSS1\/60qEe1xs6W204er8m1pmvWfabh7UvWz\/neL517oEQZU8zNY4QDcg0JCFafrzeb57MseHo\/ZpYZ75m2W8e1r5s\/Zzj+da5B0KUPc3UOEI0INOQhGj58Xq\/eTLHhqP3a2Kd+Zplv3lY+7L1c47nWue7u7sHVQ84EyHKnmZqHCEakGlIQrT8eL3fPNl\/w+E8yKUQzaUQXWf9nOO51nmq\/K\/0z0WIsqeZGkeIBmQakhAtP17vN0\/233A4D3IpRHMpRNdZP+d4rnWehCgHNFPjCNGATEMSouXH6\/3myf4bDudBLoVoLoXoOuvnHM+1zpMQ5YBmahwhGpBpSKOFaO3v2fCGvk1t7K5bIZpLIbrO+jnHc63zJEQ5oJkaR4gGZBrSaCE6VX5j8Ia+TW3srlshmkshus76OcdzrfMkRDmgmRpHiAZkGpIQLcMb+ja1sbtuhWguheg66+ccz7XOkxDlgGZqHCEakGlIQrQMb+jb1MbuuhWiuRSi66yfczzXOk9ClAOaqXGEaECmIQnRMryhb9Nr2tjtdrvvs8YxMxyjx3xbPO+S+dSca\/Z5bPk1Zli\/nuf4NVh7nW9vb4UohzNT4wjRgExDEqJleEPfpte0sTv22BnOy95rkmWWJfPZv12Gmbaex5ZfY4b163WOX4st1rkHQpQ9zdQ4QjQg05CEaBne0LfpNW3sosc+\/PixK2vHbnPqvsce49jnev+52FqIRrOJPHesufOZc9s159H7vMnqNf19lVkhSpabqXGEaECmIQnRMryhb9Nr2tjNCdElwXnqvnOOeeo5bWG+a4Toqc+fW++5ITonUOc8hzXn0fu8yeo1\/X2VWSFKlpupcYRoQKYhjRaitb9nwxv6Nr2mjV1JiO7\/em5wLjnmFufb6orgpVc058wsis9LzocW8xOi\/c5n69x3nXsgRNnTTI0jRAMyDWm0EPWGzlYbjp6v5dzHT315Z0mInjvmFue7xnO\/5MryJSE6dz6nZrnmPHqfN1m9pr+vMitEyXIzNY4QDcg0JCFafrzeb57MseHo+VrOfXzOlbLSK6JzP5d9vi0ibMlsaoXokivWreclRPudz9a57zr3QIiyp5kaR4gGZBqSEC0\/Xu83T+bYcPR8Lec+VvL7uYE658tDtzDfLYToJTMsOdZa81jyuKX\/A6bG6y1dpyXPryYlz\/vUV1q0PIfWmIsQJcvN1DhCNCDTkIRo+fF6vdmybKNyLefB3C+rPPX5OWES3e9c5Gxtvi2e\/7n5zNnML43Jw\/ucm9G582eNedQO0dJjrXGe1ly\/1uf4nHOo95qWngc1ubu7e1D1gDMRouxppsYRogGZhiREy4\/X882Wl29SnAfXa7YQHd0sV0Sj\/3Ey52P7x4uu\/pf8j4Ya69f6HJ8booevN\/qfIZeuVzSvS9a25TpPlf+V\/rkIUfY0U+MI0YBMQxKi5cfrucHjZToPrlshmssMIXruavPc28253yWPW2P9Wp7jS0Pv0qv5S9d\/6VcJrLnOkxDlgGZqHCEakGlIQrT8eC02bmyr8+C6FaK5bBWikfu3OfbrY8eKbtciKi+5T01qhOixGVyybrVms\/S4a6zzJEQ5oJkaR4gGZBrSaCFa+3s2bFq3aYaNHXPO1yz7zaPlFdH735dE06UhOieUa6xfy3N8zn2WXBU+F7Fz1kuIHkeIsqeZGkeIBmQa0mghOlV+Y7Bp3aYZNnbMOV+z7DeP1iE653a1Q7TWVdSa1AjR6Arp0nUrWS8hehwhyp5mahwhGpBpSEK0DJvWbZphY8ec8zXLfvNoGaJzA6dGiJ76tRBdto5CdDlClD3N1DhCNCDTkIRoGTat2zTDxq7W6zj2pW1z7td7BlnnuyQOTn15YY3XsNYsW58PGUL0cGbHPj7ndud+HwXa\/ce3GqLn1vPUWpxak5L1qnG1ueU6T0KUA5qpcYRoQKYhCdEyrn1Df61m2diVvoZTv19y32tzrRAdbV1bz8P6la1f7XP82PPovRYtn2vtdb69vRWiHM5MjSNEAzINSYiWsaU3ZrbbcKx9Hsy5GnT\/+zlXe6KPnTt2yf2zzrdWiEZXdOau05KreUtud+4Yp253+PHaV\/T8fVr\/fK69zluYUUlo117nHghR9jRT4wjRgExDeulLXzp961vferi2P\/zDP9zl\/xROQpSNNhxrP\/+lt4niZ0kILbmdEL08OOfOaOnt5tzv0tvVmIe\/T+ufz9a57zr3QIiyp5kaR4gGZBrSU0899eBVr3rVw7V96qmnqv4YlQUIUW5+Yzf3Klh0n6WRE\/137uP0WJ\/Ws9xf87lXKpes06kZzZnrpZ+79Bg15uHv0\/rns3Xuu849EKLsaabGEaIBmYY0GrW\/Z8Mb+jbd+sYuerxTgXruytap250L0bn338J8S66InptF9Pu5V0HPBa8QvU63\/vfVVhSiZLmZGkeIBmQa0mh4Q2erDcfaz\/\/cxy8Nj2P3ORWiSwMr+3yzhuglsxSi1+HW\/77aikKULDdT4wjRgExDGg1v6Gy14ejxGub+\/twV0UuPe+5xjt0++3x7hOicdZ3zuTWPcWzWpfNofa4cXrlf+ni9\/r7P9PdVzTVY8mdojbUXomS5mRpHiAZkGtJoZHpDZz+v5Tw4t6He\/9y5MI2OMycso8eJbp95vq1CtHSdo\/uW3O7cr08df8lsM4Xo0jn2PpdLz+ea67x07qXrufZ6C1Gy3EyNI0QDMg1pNLK8obOvzoN113pL8zXL+rPNHKLHPn4s5ud+rNXzrkntEN3\/+JL\/AXPqeIf3OfU\/ROY8Vo91vru76\/KPMgpR9jRT4wjRgExDGo0sb+jsq\/NgvXXe2nzN8vS6XrLR31KI1rpyXPt516RFiF6yTnPCdskcSmfSYG\/W5cfUCVH2NFPjCNGATEMajSxv6Oyr8+C6FaK53FKInvrc3Nv1Wr+W5\/jcQL90PS+Nz5ozEKJkuZkaR4gGZBrSaGR4Q2d\/nQfXrRDN5dZCNLryO\/d2vdav5Tl++FqXhOic+9UI0cPH6r3OkxDlgGZqHCEakGlIo1H7ezZsWrdpho0dc87XLPvNI0OI+tLceWt3yZrNWc\/SEC2ZiRAly83UOEI0INOQBqTqG4NN6zbNsLHbfy5LPj6CPb\/EbuR1bznPDGt\/7PjnQmluGF1ziJ77O2pJbC69knrpr08977XWeRKiHNBMjSNEAzINaUCEKLtv7A6fS\/SlbL3Xqed8es135HVvOc8Ma3\/qy0uP3e7wXDwWUlGM9Vi\/Vud4SYieW89L7ndsFsdm3HudJyHKAc3UOEI0INOQBkSIsvvG7vC5zNlkRRus\/Y3a0o3ZnI3e3Mdb+vjnjlO6pj1mybJ5WPuy9dv6Od77eQlRstxMjSNEAzINaUCEKFNt7A5DcOmVg1Nf7tbiS+bOBWiL573mfP2Zrq8QXWf9tnyOZ3hOtdf59vZWiHI4MzWOEA3INKQBEaJMtbGbE6LRfY7drsb9Lv1cq8dYc77+TNdXiK6zfs7xfOvcAyHKnmZqHCEakGlIAyJEmWpjNzdE979kdWkYLr3f4X1KQvTSx+81X3+m6ytE11k\/53i+de6BEGVPMzWOEA3INKQBEaJMtbGr8aW5rT8X3a7VcYTodSlE11k\/53i+de6BEGVPMzWOEA3oMaRjVyZqHHNr1P6eDW\/o2zTTxi4KsFO\/viQoT92v5GqlL81lrXlY+7L1c47nW+ceCFH2NFMbCNGAXiGa4Xn0xhs6W204Sp7LuV\/f\/37p1dJT95v7uSXhWes4x26\/1nz9ma6vEF1n\/Zzj+da5B0KUPc3UFkI0IEuIHvv4sSumx25z6r7HHuOSz7XAGzpbbTh6v6Yaa9L7OWSY7zWtQxaF6Drr5xzPt849EKLsqRDdAFlDdElwnrrvnGOe+1wrvKGz1Yaj92u6ZA2iq5VbV4jmUoius37O8Xzr3AMhyp4K0Q2wtRDd\/\/Xc4FxyzDXxhs5WG47er4l15muW\/eZh7cvWzzmea53v7u4eVD3gTIQoeypEN0CmADsMw0MPb3dJiEbHPPz8GnhDZ4sNh\/Mgl0I0l0J0nfVzjuda56nyv9I\/FyHKngrRDZA5RM\/dv\/SK6CXPsSbe0Nliw+E8yKUQzaUQXWf9nOO51nkSohxQIboBsoToue\/RXPJ73yPKLek8uG6FaC6F6Drr5xzPtc6TEOWACtEN0CtET32J7LHbHfvcud9H97vkcy2o\/T0b3tC3qY3ddStEcylE11k\/53iudZ6EKAdUiG6ATEMakKpvDN7Qt6mN3XUrRHMpRNdZP+d4rnWehCgHNFPjCNGATEMaECFKG7srV4jmUoius37O8VzrPAlRDmimxhGiAZmGNCBClDZ2V64QzaUQXWf9nOO51nkSohzQTI0jRAMyDWlAhCht7K5cIZpLIbrO+jnHc63z7e2tEOVwZmocIRqQaUgDIkRpY3flCtFcCtF11s85nm+deyBE2dNMjSNEAzINaUCEKG3srlwhmkshus76OcfzrXMPhCh7mqlxhGhApiENiBCljd2VK0RzKUTXWT\/neL517oEQZU8zNY4QDcg0pNGo\/T0b3tC3qY3ddStEcylE11k\/53i+de6BEGVPMzWOEA3INKTR8IbOVhuO3q+JdeZrlv3mYe3L1s85nm+deyBE2dNMjSNEAzINaTS8obPVhqP3a2Kd+Zplv3lY+7L1c47nW+ceCFH2NFPjCNGATEMaDW\/obLXh6P2aWGe+ZtlvHta+bP2c4\/nWuQdClD3N1DhCNCDTkEbDGzpbbTh6vybWma9Z9puHtS9bP+d4rnW+u7t7UPWAMxGi7GmmxhGiAZmGNBre0Nliw+E8yKUQzaUQXWf9nOO51nmq\/K\/0z0WIsqeZGkeIBmQa0mh4Q2eLDYfzIJdCNJdCdJ31c47nWudJiHJAMzWOEA3INKTR8IbOFhsO50EuhWguheg66+ccz7XOkxDlgGZqHCEakGlIo1H7eza8oW9TG7vrVojmUoius37O8VzrPAlRDmimxhGiAZmGNCBV3xi8oW9TG7vrVojmUoius37O8VzrPAlRDmimxhGiAZmGNCBClDZ2V64QzaUQXWf9nOO51nkSohzQTI0jRAMyDWlAhCht7K5cIZpLIbrO+jnHc63zJEQ5oJkaR4gGZBrSgAhR2thduUI0l0J0nfVzjuda59vbWyHK4czUOEI0INOQBkSI0sbuyhWiuRSi66yfczzfOvdAiLKnmRpHiAZkGtKACFHa2F25QjSXQnSd9XOO51vnHghR9jRT4wjRgExDGhAhShu7K1eI5lKIrrN+zvF869wDIcqeZmocIRqQaUijUft7Nryhb9MWG44vfelLTKIQzaUQXWf9lpzjvf+MZlSIkuVmahwhGpBpSKNRe+1vbm4e7na7idvyscceq\/o\/JH7u537uwQ\/90A9NzOFrX\/vai+fb+9y8Vufg79Pj+vsq\/98bx5h73tdmtxOi7Gev8\/4YazyXPK92AZmGNBrWHgAAtEaIckQz7bOFaECmIY2GtQcAAK0RohzRTPtsIRqQaUijYe0BAEBr7u7uHvR4XCHKnmbaZwvRgExDGg1rDwAAVqDq95zORYiyp5n22UI0INOQRsPaAwCAFRCiHM5M+2whGpBpSKNh7QEAwAoIUQ5npn22EA3INKTR6PU9GwAAYCiEKIczU+MI0YBMQxqQLm8MAABgKIQohzNT4wjRgExDGhAhCgAAWiNEOZyZGkeIBmQa0oAIUQAA0BohyuHM1DhCNCDTkAZEiAIAgKbc3t4KUQ5npsYRogGZhjQgQhQAADSl115PiLKnmRpHiAZkGtKACFEAANAUIcoRzdQ4QjQg05AGRIgCAICmCFGOaKbGEaIBmYY0Gr2+ZwMAAIyDEOWIZmocIRqQaUijYe0BAEBrhChHNNM+W4gGZBrSaFh7AADQGiHKEc20zxaiAZmGNBrWHgAAtEaIckQz7bOFaECmIY2GtQcAAK25u7t70ONxhSh7mmmfLUQDMg1pNKw9AABYgS7\/OKIQZU8z7bOFaECmIY2GtQcAACsgRDmcmfbZQjQg05BGw9oDAIAVEKIczkz7bCEakGlIo9HrezYAAMBQCFEOZ6bGEaIBmYY0IF3eGAAAwFAIUQ5npsYRogGZhjQgQhTVubm5ebjb7SaS5Da9ubmpvT8QohzO3S5P46zxXPK82gVkGtKACFFUZ7fbTd\/85jdJkhu1wd5MiHI4MzWOEA3INKQBEaKojhAlyW1be292e3srRDmcmRpHiAZkGtKACFFUR4iS5LatvTfrtdcTouxppsYRogGZhjQgQhTVEaIkuW2FKFlupsYRogGZhjQgQhTVEaIkuW2FKFlupsYRogGZhjQavb5nA9eNECXJbStEyXIzNY4QDcg0pNGw9miBECXJbStEyXIz7bOFaECmIY2GtUcLhChJblshSpabaZ8tRAMyDWk0rD1aIERJctsKUbLcTPtsIRqQaUijYe3RAiFKktu29v7g7u7uQdUDzkSIsqeZ9tlCNCDTkEbD2qMFQpQkt22D\/UGXfxxRiLKnmfbZQjQg05BGw9qjBUKUJLetECXLzbTPFqIBmYY0GtYeLRCiJLlthShZbqZ9thANyDSk0ej1PRu4boQoSW5bIUqWm6lxhGhApiENSJc3Blw3QpSXeurcqXFe7R8j+vWcYxy6pTUg5yhEyXIzNY4QDcg0pAERoqiOzTIvdc0QvfTYx2671jnvzxbXUoiS5WZqHCEakGlIAyJEUR2bZV7q4bmzf8Ux+tyxjx\/e99jtD2936lhLPnbs+R47\/qnnXXMNes+U21SIkuVmahwhGpBpSAMiRFEdm19e6qkvnZ0Tcedue+7XtUL00uBstQbkUmvvzW5vb4UohzNT4wjRgExDGhAhiurYAPNSl4RW6eeWRun+55dcRZ3zfOY8r5LPkUutvTfrtdcTouxppsYRogGZhjQgQhTVsQnmpS694rfkS16X\/vpUiM59DXOfz6UhOncNyKUKUbLcTI0jRAMyDWlAhCiqYxPMS61xxW+kEJ37HMilClGy3EyNI0QDMg1pNHp9zwauG5tgXmqGL8099vu5n5tzrEtCtfRz5FKFKFlupsYRogGZhjQa1h4tsAnmpR6Lq1Pfi7n0ezT3bx99\/NgxTh1\/zuej53ru+dZaA3KpQpQsN9M+W4gGZBrSaFh7tMAmmFvXOczRFaJkuZn22UI0INOQRsPaowU28dyyzl9SiJI1zLTPFqIBmYY0GtYeLbCRJ8ltW3t\/cHd396DqAWciRNnTTPtsIRqQaUijYe3RAiFKktu2wf6gyz+OKETZ00z7bCEakGlIo2Ht0QIhSpLbVoiS5WbaZwvRgExDGg1rjxYIUZLctkKULDfTPluIBmQa0mj0+p4NXDdClCS3rRAly83UOEI0INOQBqTLGwOuGyFKkttWiJLlZmocIRqQaUgDIkRRHSFKkttWiJLlZmocIRqQaUgDIkRRHSFKkttWiJLlZmocIRqQaUgDIkRRHSFKktu29t7s9vZWiHI4MzWOEA3INKQBEaKojhAlyW1be2\/Wa68nRNnTTI0jRAMyDWlAhCiqI0RJctsKUbLcTI0jRAMyDWlAhCiqI0RJctsKUbLcTI0jRAMyDWk0en3PBq4bIUqS21aIkuVmahwhGpBpSKNh7dECIUqS21aIkuVm2mcL0YBMQxoNa48W3NzcPNztdhNJcps+9thjVb9iarfrs9947OYx70fs5mM3L0\/zlYe7nRA9yhoLg+NYewAA0Br7DaAvQjTAX079sPYAAKA1d3d3D3o\/B2BkhGiAGOqHtQcAACuQ5ksUgRERogFiqB\/WHgAArIAQBToiRAPEUD+sPQAAWAEhCnREiAaIoX74ng0AALACQhToiBANEKJd8cYAAABaY78BsMLpBAAAA3tJREFUdESIBgjRrnhjAAAArbHfADoiRAOEaFceeWN4+PDh9OKLL4Y+fHj6fcT93d\/93d\/93d\/93f\/I\/YUo0BEhGiBEu\/Jw33e\/+90Pf+AHfmCKfPe73\/3w8D7u7\/7u7\/7u7\/7u7\/4z7g+gE0I0QIgCAAAAQBuEaIAQBQAAAIA2CNEAIQoAAAAAbRCiAUIUwJaZ+3fY2n\/X7T9e7cfe7Xbf5zVxba8HADA2QjTAGz6ALbOFEN3SsTNw7a8PADAWQjTAGz6ALXPsyuPhVcJjVw5PXU3c\/3h0\/CXHPnyM6LGj53\/qNUefm\/Naz63XsWMfu+2p57b0ecw5JgAAW0KIBniDB7BlTgXUnF+fu93c4899vDmhFt323McveY6XrN\/+7+eG6KWv23sUAGDrCNEAb\/IAtkxpGJZ8bu5zqfHYhx8\/d3Vx6XMseW7RFc3S1+39CQBwDQjRAG\/0ALZMyZXOpV9qeu7LVdcM0YhLn+Oc53buODVD9FhkAwCwRYRogDd6AFumxhXR6D5Ljj\/38dYO0RavJ3rM2ldEzz0uAABbQIgGeJMHsGVafmnu0qul2UO09Iro3NvWPLb3KADA1hGiAd7kAWyZklCMvvxz\/+NzvzT31OPN\/dLT1l+ae+71zPn9qTWb+zxKIxYAgC0hRAO8wQNAjL8jAQBACUI0wCYLAP6T\/at2\/n4EAAClCNEAGy0AAAAAaIMQDRCiAAAAANAGIRogRAEAAACgDUI0QIgCAAAAQBuEaIAQBQAAAIA2CNEAIQoAAAAAbRCiAUIUAAAAANogRAOEKAAAAAC0QYgGCFEAAAAAaIMQDRCiAAAAANAGIRogRAEAAACgDUI0QIgCAAAAQBuEaIAQBQAAAIA2CNEAIQoAAAAAbRCiAUIUAAAAANogRAOEKAAAAAC0QYgGCFEAAAAAaIMQDRCiAAAAANAGIRogRAEAAACgDUI0YLfbTV\/4whdIkiRJkpUVogGveMUrSJIkSZKNbM0mQxQAAAAAsF2EKAAAAABgVYQoAAAAAGBVhCgAAAAAYFWEKAAAAABgVYQoAAAAAGBVhCgAAAAAYFWEKAAAAABgVYQoAAAAAGBVhCgAAAAAYFWEKAAAAABgVYQoAAAAAGBVhCgAAAAAYFWEKAAAAABgVYQoAAAAAGBVhCgAAAAAYFWEKAAAAABgVYQoAAAAAGBV\/l+IEKKm6OIoYAAAAABJRU5ErkJggg==\u0022 style=\u0022height:401px; width:698px\u0022 \/\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe most important integration aspect is the device communication. This is essential for the Digital Twins to really be twins of real-world physical devices.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIn addition to provide a custom device communication layer Ditto will provide an out-of-the-box integration with Eclipse Hono to support device communication.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIn this scenario Ditto uses Eclipse Hono in order to receive messages (e.g. state changes) from devices and to send messages (e.g. configuration changes) to devices.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 src=\u0022data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAA8QAAAE8CAYAAAAG8niqAAAgAElEQVR4nO3deZhU9Z3v8Zp\/5nH8B2nNjZOZO8kkMcs8d+IkOHcSk0DfzPZcFxYZvVFBdHRciFE2AZfQnRjpxqXFJCSACxpxTYxGMzY0YLGDgKBssnZ3VbM00FDF1qx9vveP6lNdy6mz1HZ+v3Per+f5PNK1nHNqOVW\/j7+qUxEBAAAAACCEIn5vAAAAAAAAfqAQAwAAAABCiUIMAAAAAAglCjEAAAAAIJQoxAAAAACAUKIQAwAAAABCiUIMAAAAAAglCjEAAAAAIJQoxAAAAACAUKIQAwAAAABCiUIMAAAAAAglCjEAAAAAIJQoxAAAAACAUKIQAwAAAABCiUIMAAAAAAglCjEAAAAAIJQoxAAAAACAUKIQAwAAAABCiUIMAAAAAAglCjEAAAAAIJQoxAAAAACAUKIQAwAAAABCiUIMAAAAAAglCjEAAAAAIJQoxAAAAACAUKIQAwAAAABCiUIMAAAAAAglCjEAAAAAIJQoxAAAAACAUKIQayoSiRCiRQAAAABVMVrVVCQSkXg8TojSoRADAABAZYxWNUUhJjqEQgwAAACVMVrVFIWY6BAKMQAAAFTGaFVTFGKiQyjEAAAAUBmjVU1RiIkOoRADAABAZYxWNUUhJjqEQgwAAACVMVrVFIWY6BAKMQAAAFTGaFVTFGKiQyjEAAAAUBmjVU1RiIkOoRADAABAZYEarW7evFleeuklefTRR2X8+PEyZswYmTBhgvz85z+X3\/72t7J582a\/N7FsKMREh1CIAQAAoLJAjFZnzJghN910k9x+++0ybdo0ee2116SlpUUWLVokLS0t8sorr0hjY6PcfvvtcvPNN8vMmTP93uSSUYiJDqEQAwAAQGVaj1bnzp0rgwcPll\/84hcSi8VcXaetrU2mT58ugwcPlldeeaXCW1g5FGKiQyjEAAAAUJm2o9UxY8ZIY2NjScuYOnWqjB07tkxbVF0UYqJDKMQAAABQmZaj1VGjRsmyZcvKsqwlS5bIHXfcUZZlVZMOhTgSieSllGVVcjtLXXc5tk+Hx7SY2wQAAACoSrvR6g9\/+EPp6Ogo6zJ3794tN954Y1mXWWk6lCerbSx2u\/0qxOZ55SjNft5GP58DAAAAgKq0Gq3efffdsnHjxoose\/369TJ69OiKLLsSdChPToXYqmxazSa7PS33vEKn555XbCHOXJbVMu3WVcptdFvSVQiFGAAAACrTZrQ6ffp0mTVrVkXX8etf\/1p++ctfVnQd5aJLGbI7zaoA2l22lMu5vU6h7XW6vpd1lWN7dXj8zW0FAAAAVKXFaLW9vV1GjhxZlXXdfPPNsmfPnqqsqxSqFSKn2V43M7PlLsTFLLvY67gp1ZW6jSrPGFOIAQAAoDItRquPPPKI\/PGPf6zKuv7whz\/IT37yk6qsqxQqlR83s6heC2e5ymKp1ylU6N1su9fruf2fCXYz7yo9L8ztAQAAAFSl\/Gj1+PHjMnz48Kquc9iwYXL69OmqrtMrVYqP03ds3Vy3mLJYTLmt5HXKfZ7bGWe3j4Wfzw8AAABAVcqPVt944w352c9+VtV1TpkyRX7\/+99XdZ1eqVZ6nMqe18LppSxW4jvEXkun00yv3d\/l3F6Vnhfm9tiJRqMydOhQSSQSVdpzAAAAgD7KF+KHHnqoah+XNr311lvKf2xaxeLjprg5lU6rjwjbFUu7ZXhZtptts7p9brbX6j4p5TYW+lu154S5TVai0ajU1tamb19dXV11dyAAAABANCjEt956q2zbtq2q69yyZYvcfvvtVV2nVyqWH+KuIPq9DdW+vZlyi3C\/fv2krq6OGWIAAAD4QvlCPHjw4Kp\/n\/fEiRMybNiwqq7Tq7AVq6AkbI+bWYgpwgAAAFCR8oX4qquuMvxY79VXX+3Hal0LW7EieiYSiWQV4QsuuEBqa2tl8uTJUl9fX9UAAAAAuZQvxNdcc43R09NT1XWePXtWBg8eXNV1ekUhJjokEonIoEGD8grxpEmTpK6urmqpra3le8oAAADIo3whvv7666Wrq6uq6+zs7JQbbrihquv0ikJMdEjmR6Yzi\/FFF10k9fX1VfvIdH19PYUYAAAAeZQvxPfcc4+sWbOmqutcsWKF3HvvvVVdp1cUYqJDrA6q5UcxphADAADAivKFuKmpSZ577rmqrnP27Nkyffr0qq7TKwpx4QLm9nSnn0zyGr9vu4qx+9mlzGJc6bJKIQYAAIAV5QvxypUrqz5bO3r0aFm7dm1V1+kVBaxwAXP6fV\/zNLu\/nU53Oo\/03Ud2otGoDBkyhBliAAAA+EL5QiwicvPNN0s8Hq\/KulpbW2XkyJFVWVcpKGOFC5hTIfY6i2y3Lr9vr+pxKsTVQiEGAACAFTVGqw7mzp0rjY2NVVnXY489Jq+++mpV1lUKyljhAmb339x\/W13X6TQ355G++0gFFGIAAABYUWO06sKoUaOkra2touvYuXOn3HbbbRVdR7lQxgoXMLv\/5v7b6rpOp7k5j\/TdRyqgEAMAAMCKGqNVF9atWyf33HNPRddx1113ycaNGyu6jnKhjBUuYHb\/zf231XWdTnNzHum7j1RAIQYAAIAVNUarLr388ssybdq0iiy7oaFBXnnllYosuxIoY4ULmN1\/rf5tdRmry3o5j\/TdRyqgEAMAAMCKGqNVD+bPny\/33XdfWZf54x\/\/WFpaWsq6zEqjjBUuYE7\/dvO30+lO55G++0gFFGIAAABYUWO06tGrr74qEyZMkHPnzpW0nNOnT8u4cePkzTffLNOWVQ9lrHABc\/p35mnMEFf+8VABhRgAAABW1BitFiEajcqwYcPkpZdeKur6L7zwggwfPlwWL15c5i2rDsoY0SEUYgAAAKhMjdFqCaZNmyZDhw6VqVOnyuLFiwvOGp87d06WLFkijz32mAwePFiefPLJKm9peVGIiQ6hEAMAAEBlaoxWS3TmzBl5+eWX5b777pMhQ4bIyJEjZfTo0TJmzBgZPXq0jBgxQoYMGSJjxoyRuXPnytmzZ\/3e5JJRiIkOoRADAABAZWqMVsustbVVVq1aJYsWLZKVK1dKa2ur35tUdhRiokMoxAAAAFCZGqNVeEYhJjqEQgwAAACVqTFahWcUYqJDKMQAAABQmRqjVXhGISY6hEIMAAAAlakxWoVnFGKiQyjEAAAAUJkao1V4RiEmOoRCDAAAAJWpMVqFZxRiokMoxAAAAFCZGqNVeEYhJjqEQgwAAACVqTFahWcUYqJDKMQAAABQmRqjVXhGISY6hEIMAAAAlakxWq2ADRs2GIMGDTLWr19v+L0tlRCJRAjRIiqgEAMAAMCKGqPVCrjzzjuNl19+uefOO+8MZCEG4B6FGAAAAFYCWYjXr19v\/Od\/\/qchInL77bcbH330EaUYCDEKMQAAAKwEshDfeeedxpo1awwRkbVr1xrMEgPhRiEGAACAlcAV4szZYROzxEC4UYgBAABgJXCFOHN22MQsMRBuFGIAAABYCVQhtpodNjFLDIQXhRgAAABWAlWIrWaHTcwSA+FFIQYAAICVwBRiu9lhE7PEQDhRiAEAAGAlMIXYbnbYxCwxEE4UYgAAAFgJRCF2MztsYpYYCB8KMQAAAKwEohC7mR02MUsMhA+FGAAAAFa0L8ReZodNzBID4UIhBgAAgBXtC7GX2WETs8RAuFCIAQAAYEXrQlzM7LCJWWIgPCjEAAAAsKJ1IS5mdtjELDEQHhRiAAAAWNG2EJcyO2xilhgIBwoxAAAArGhbiEuZHTYxSwyEA4UYAAAAVrQsxOWYHTYxSwwEH4UYAAAAVrQsxOWYHTYxSwwEH4UYAAAAVrQrxOWcHTYxSwwEG4UYAAAAVrQrxOWcHTYxSwwEG4UYAAAAVrQqxJWYHTYxSwwEF4UYAAAAVrQqxJWYHTYxSwwEF4UYAAAAVrQpxJWcHTYxSwwEE4UYAAAAVrQpxJWcHTYxSwwEk2qFeOLEiT0DBw4UQvzKxIkTe\/zeD+DN+Acm91z5vUFCiF8Z\/8BkXjcQSFoU4mrMDpuYJQaCR7VCHIlE5I033iDEt0QiWrz9I0MkEpGHn2kmxLfwuoGg0uKZXY3ZYROzxEDwqFiI4\/E4Ib6Fga1+IpGIzF16ghDfwusGgkr5Z3Y1Z4dNzBIDwUIhJiQ7DGz1QyEmfofXDQSV8s\/sG2+80aivr+957rnnjGrlpz\/9ac9NN93E9ySAgKAQE5IdBrb6oRATv8PrBoJK+Wf2qlWrembMmGFUO6tXr6YQAwFBISYkOwxs9UMhJn6H1w0EFc9sAIFHISYkOwxs9UMhJn6nGq8bl11+he3pl11+RVEpdN1itsdpOW6WC7Xwjggg8CjEhGSHQqwfCjHxOyoUYjeX9XJ5N8twU3gzT6MQ64d3RACBRyEmJDsUYv1QiInfoRC7Ww6FWD+8IwIIPAoxIdmhEOuHQkz8DoXY3XIoxPrhHRFA4FGICckOhVg\/FGLid8r9umFVOJ2+B2x1fbtl557m9jvEdiXYy3eIC5VqqIV3RACBRyEOSNpbZc\/aP0jnvJ9L538\/IvtWvCjxXZv93y4NQyHWD4WY+J1yvm54mX0tdHo5Zojtrl+o9Dotp9BtohSri3dEAIFHIdY\/ez98Q448fZkkp\/aXxNQaSUztL4mGGklM+0vZ3\/xTicdivm+jTqEQ64dCTPxOuV437AqiSoW40N9eC3HmaZRiNfGOCCDwKMR6Z3\/zTyXZeElWEU6m\/1sjyYYaOfTSEN+3U6dQiPVDISZ+JywzxG5++snL9SnD6lP+HXH\/\/v3Ghg0bqp79+\/cbft92AOVBIdY3+xf\/ShJTayTZ0Dsj3ND778yZ4t5\/H3z1Rt+3V5dQiPVDISZ+p1rfIba7rNNpxV7ezeWKKcSUYT0o\/444fPhw47bbbqt6hg8fTiEGAoJCrGc6Ni3umwXuLb\/JdPpmh1Pnpf69b\/mLvm+3DqEQ64dCTPwOrxsIKuWf2QMGDAjVegGUH4VYv8Tadkny8UtTs8JT+0uiob8kGzK+Ozy1RhLpmeK+2ePEU38j8d2f+r79qoeBrX4oxMTv8LqBoFL+mU0hBlAqCrF+OfTqTX0lt6F\/b\/lNfVzaLMbJnPOTvf8++NZo37df9TCw1Q+FmFQjD\/+iuWAikYgsXry4YABdKf+OSCEGUCoKsWbZslKSjRdnFGKz9ObMCk\/NnSHuLcaNl0jHzo3+3w6FQyHWD4WYVDp3PjjL+PJlXzWu\/N4gscrll18ugwYNssxXv\/pVY86cOXzdEFpS\/h2RQgygVBRivXLoxWtzSnBNzkem+0pwMn2grezZ4s73HvT9dqgcCrF+KMSk0rnutoeMKVOmFFVq6+vri74u4Dfl3xEpxABKRSHWJx1bVkqy4eKM7wr3L\/xv86PUmWXYvMy0S32\/LSqHQqwfCjGpdCjECCvl3xEpxABKRSHWJwdf+WHWzyols4pwdpK93yvuK8vZB+Das2G+77dH1VCI9UMhJpVOtQrxZZdfkRery7hdVinXsdumQtvmdplur1doXdVYN1KUf0ekEAMoFYVYn6Rmh2uyjxzt8aBaZoHumjHA99ujaijE+qEQk0qnmoXYzWlelatAVqsoOt0PFOLqUf4dkUIMoFQUYj2yL\/pMuswmp9ZkfSQ62VAjiac+L6fXz5Hzh7bJ6TUzJfHE5\/rOyzu4Vqosx2Ptvt8uFUMh1g+FmFQ6fhbi3NOtZkvN06wuZzXLWuzMq9N2WP1tt01u1lPs7fFyu53WHWbKvyNSiK3ZHfaeEJWiAgqxHkk89fm+Qpw+UFbfjHDPqaT0nDgoZ9uWSE93QnqOd2YfZMsie9e94\/vtUjEUYv1QiEmlo2ohtip7Xq7jdJ7b7bD72+022i2r2O3wsr1u1x02yr8jUoitRSIRufLKKwlROqoMuqtViEeNGiXRaNTxchTi\/MR2bOwrwZnfH+4txMdfuVZERE4tnyanljXKqRVPimEYcvTX38w6+nTWbPHU\/nLw9VG+3zYVo8q+CfcoxKTS0aEQe7mcm+u42b7c0ms3K+y0vVbrKmYmm0JcXsq\/I1KIrTGgJjpElUF3NQrxnDlzJBKJSCQSkdraWttizP6bn855j\/YdTCtzxrf348\/H37heDMOQ7mWN0r20QU4taxTDMOTY7O9k\/xxTQ871f32F77dNxaiyb8I9CjGpdIJWiAuVTZUKsd26i7k9uZehELuj\/DsihdgaA2qiQ1QZdFejECcSCamrq5N+\/fo5FmP23\/wcfnZQRrGtyf4+cG+57Tl3Ws4f3i2nt\/xezh\/dI8aZk3kzyVlFemp\/OfLUFyTe3ub77VMtquybcI9CTCqdIBXicn1kOvPvchdiu+8Qe1mml9vm9XJhofw7IoXYGgNqokNUGXRX8zvEboox+29OYu2SaPpi9kyvxfeBj874hpzv2ikiImfbopJ85it5H5FO5Cwj+filEt\/9qf+3UbGosm\/CPQoxqXRUOsp0Ob9DXOoMsdP22a3bbn3FFmK394GbdSBF+XdECrE1BtREh6gy6K6vr5d\/+Zd\/kcbGxqrFXOeFF16YV4zZf3Oy45Pen1vqK7ZWB9VKNNTI6U9eSX13+Jmv9BVnm4NqJRtqJL5zk\/+3UbGosm\/CPQoxqXRU\/h3izMt5KYpO1ym0fW62p9Df5fwOsdvbU+hj04XWiWzKvyNSiK0xoCY6RJVB9\/nz52XixIkyadKkquaqq66Siy++OF2IBw0aRCG2yN5176aLb6GDapn\/Pdu6WAyjRxJP\/nVW6S10UC0KsXVU2TfhHoWYVDrVKsSlotCh3JR\/R6QQW2NATXRIWAfdc+bMkS984Qt5RdjE\/pudfStezC7DDTWpA2xlfIc42Vt2zx\/8VIzTRyX5+KXZv1Gc+X3jzGL8xF9JrHWH77dRtYR139QZhZhUOqoWYjcHiQJKofw7IoXYGgNqokPCNuh2KsIm9t\/s7FsyM116Cx1lOn1gre6E9BzdK4nGS\/LLr8VRpg\/\/6h98v30qJmz7ZhBQiEmlc91tDxmjRo0yFi9eLF4zatSoqs0QA+Wm\/DsihdgaA2qiQ8I06H766acdi7CJ\/Tc7e1e9mvfRZ8vvBDf0F8Mw5PzBrRkH0KqxvLy5rM7\/fsT326diwrRvBgWFmFQ609\/canzt7\/\/R+MYV3xerXHTRRTJo0CDL\/NM\/\/ZO0tbVRiKEl5d8RKcTWGFATHRKmQXcikZAhQ4bYFmET+292Orausvzur9VBtQzDkLPtS7OLc4ECnZz2GYnH2n2\/fSomTPtmUFCIid\/hdQNBpfwzm0JsjQE10SG8eVpj\/81Je5sknv5SarY34+eTrA6qZRiGnNn6dtYscN5BtRpqJDnts9KxeYX\/t03RsG\/qh0JM\/E65XjfcHGW6mGUGQSW\/Lx2U+6gSlH9HpBBbY0BNdAiDbmvsv\/k5+Ls7smaJk1Nrcg6qVSPJxkvEMAw5ve7Z\/I9HZ172qc\/Lno9bfL9NKod9Uz8UYuJ3ylmI3ZwWNtwv\/lH+HZFCbI0BNdEhDLqtsf9apG2XJBv\/R87BtLK\/J5x8\/HNiGIacWtqY8bHqjMs11MjhF\/5d4ru2+H97FA\/7pn4oxMTvVLIQW51uNVNa6Dd+nX7D126ZdttZ6eXkXs7pNLvfLM48v9B5VssqdnuDRPl3RAqxNR0G1OYBhjJTyrIquZ2lrrsc26fDY1rMbUK+ID7W5UgsFpPEL\/4u5\/vEGbPGTX8rhmHIyXnjs3+reGqNHHnic7Lnk4USb90hHZuWyp5PPpD4lpUSb90m8fY232+bamHf1A+FmPidahZiL6XO7rpululmGyuxHKfLet2mat9HQaL8OyKF2JoOA2qrbSx2u\/0qxOZ55SjNft5GP58DyBfEx7psibXLgT\/cl\/VTS4mGS+T4K4PlzJbfpz4yvWamJJu+0Hf+9K9IfPt66WyZKsmGi\/OONH1k2qVy8LWR0rFhnsRjMf9vowJh39QPhZj4HRUKcea\/3ZY6N8t04mb5XpdT6HynWWA32+THfaQz5d8RKcTWdBhQOxViq7JpNZvs9rTc8wqdnntesYU4c1lWy7RbVym30W1JVyEMuq3p8NiVOx07PpbOd8bJ4VlXSmL6ZXL4l9+QQy8Pl\/0Ln5SObWvzLn\/wzdtTxXbapXK2dbEYhiFGT48Y506LYRjSc\/qoHJv97VThnf41STR9Meco0zU5f\/f+LvHM78jeD3\/n+\/3hd9g39UMhJn6n2oW4UDkspexZLdOugLo5z+60Qssp5mPUbu6T3L\/LdR8FnfLviBRiazoMqN0UYquCXOiypVzO7XUKba\/T9b2sqxzbq8Pjb24r8uny+JUrB94ZJ8nHLy3w00r9Jdl4iRx56otyeNZ3pWvuf8ihV2+UrplXSmJqfzm9\/sXUkaV3vC+nlj8u3cumyam1s6Tn7EnpOX\/W+qeasmaI84txsvFi6Zr1fYmFeLaYfVM\/FGLid\/ycIba6XKmzn162sdiPOpe6HK\/3Se7flbyPgkT5d0QKsTXVBtROs71uZmbLXYiLWXax13FTqit1G1WeMWbQbU3Fx6oiibXLkRkD+g6QlXnArKn9ew+IlfHTSTm\/J2z+zNK5zk1yalmDdC9rkO6lDXJqaYOcWjtLDMOQ7gUP9l23IbXMZO7MsM3vFe9bOiuUxZh9Uz8UYuJ3KlmIvXw82Onvcn+H2O1srNfl2F220PXdnufl8sXetiBR\/h2RQmxNpQG1m1lUu+u5+duvQlyo0LvZdq\/Xc\/s\/E+xm3lV6Xpjbg3yqPU6VSKx1pySmX5ZThPNniG3\/fuJzvb87\/I50L+0rw+a\/RUTO7pyfX3xtlmn1cequl64J3ZGp2Tf1QyEmfqechdjNx3LtzndTkAtdz+1HgXM\/4lyJ5dhtn5ft9+s+Cgrl3xEHDBggGzZsMKqdb33rW4bft92OKgNquyIWhELs9jrlPs\/tjLPbx8LP5wfyqfQYVSqHnvvnAgW0Jv3fZObs8NQai98hTv3u8JndC7OKcGq2uDF1gK2Pf5teZt7MsJc8fZl0bFri+\/3GvolCKMTE7\/C6gaBS\/pnd1NTUc9tttxnVTlNTU4\/ft92OSgNqVWeISynRXkun00yv3d\/l3F6Vnhfm9tiJRqMydOhQSSQSVdpzKieRSMjQoUMlGo06Xla1x6ncOfCnhyxnZpO9vxWcW4gTDTWSnFqTV2iTDTXSc\/qoGGdOyKkVT8qpZY3pUnxu33oRETHOHJfuD+ok0XBx3s815c9AZ88ap79jbJ4+7TOyb\/kc3++\/MOybVusvtE2FLmvG7rxCl3G7brfrLJbX1w2\/C1GxJcoqbq+X++9qb+83v3uVTG56z3K7GuZ8KP82\/O70ebl\/By0UYgQVz2xNqTagtipkXguxeVpuacw83elyVpd1s2w322Z1+9xsr9V9UsptLPS3as8Jc5usRKNRqa2tTd++urq66u5AFVBXV5e+PbW1tbYDXBUfq3Jlz5blfbPALj4inSqpmTPEvWX1yf8pPSe7UkeXNgwxzp+Ts7ta5PSWt6TneGfqu8X7P0kfddo4d1qO\/+5GSTZe4nxQrYZU+U5m\/saxeUCuhv6yP\/pL3+\/HIO+b5rpzt8GqbBY6zcvfhU6zW4fT9ctVDLy+bvhdiEopmNW6Xrm3d8jIiRKJRKRhzoeOl\/Vrm6t53wBBxDNbU0EeUAc5YXvcct88cwfb\/fr1k7q6usDMENfV1Um\/fv0cB7hBfh4cmfGt7O8MN2TPDqc+Cl2TU5Azi+nFcuLdu8Q4fzb1celNb8rx3\/5fOd+1UwyjRwyjR3pOJeXUqmdS12\/8jJxa\/qQYZ46LiEjPyUNy4s3\/l5oxnlqTccCt\/IN2ZX73OGlum3mwregM3+\/LoO6bpRRiN7PIXgpxoW1xun65ioHX1w2\/C1E5CmZubh33tHzp61dIJBKRfxt+tzS9vinvelb\/ntz0nnzp61fI9\/79pvSyml7fJN\/795vSl8lcnrku87xbxz3tanubXt8kkUhEhoycmHW+U6xuX6F16hIKMYKKZ7amgjygDnLC9riZb55BLsK53Axwg\/o82Pvh65Zls1ARTTZkz9omHv9LObt7Uep3hk8dleOvDc2+\/PQvy9EZl0ui4eL8Gegn\/zpVjM+dEcMw5PyhbXL8teH525JZwC2Oap35770fvun7fRrEfdOuENv91+o6Vqd7nSEu5vxyFwO3rxt+F6JyF2KzoI557LV08TQ\/cuxUiH9496My5rHX0v+eu\/SEfPO7V6UvZy7PLMx3P\/xsel2Tm96TSCQidz\/8rKvtddqWQtfNXKe5rVbr1CUUYgQVz2xNBXVATYIVc1BnDhIuuOACqa2tlcmTJ0t9fX1Jefrpp0teRiWXPXnyZKmtrZULL7wwb4Ab1P03Me1S60LscAToZEONHH\/tOuk5fVwMw5CzuxdJ8qm\/sTwidO7RorM+Zt1QI8mmL8rpDS+K0dOT+lj1wW1y7PmBliXc6ejTycZLJL59ve\/3q277Zmas3rsK\/V3OQpwbN++pXs63unw57i+n1w2\/C1EphdhqBtWcOXUq0k4l9EtfvyJred\/795uyvvdrta5IJPX94EoW4syCbrdOXUIhRlDxzNZUUAfUJFiJRCIyaNCgvEH3pEmTpK6urqQ0NTWVvIxKLnvSpEl5A9tBgwYFthDvX\/FS9sejLWeE8w+qlZz2P+TMptdT3wPuOS8n3r278HeOp9bIoddulsS0S\/O+\/5t3+Sc+J+diKzOK8adydPZ3xDjbnf7O8dGZ\/5h1UC2rHPnVtwL5O8WV3DczY\/XeVaisVnKG2M17qpfzrS5fjvvL6XXD70JUSiEu5Ty3JdT8GLV52pe+fkW6GNsV80oVYqe\/dQuFGEHFM1tTQRxQk+DFfPOMRqNZg++LLrpI6uvrA\/uR6fr6ernooovyBrSmIO6\/R2YMyC+WOQe1yi24x579jvScOJg+QFay6W8dDsBVI12v3CB7V76cdfAsuxydcbmcbVsiRs\/51Ho6N8qpNb+WczuWanoAACAASURBVHs\/EsMwJDnts7brTEztL\/sWB+\/7xH7tm+WcIc4s1CoU4lK4fd3wuxCVuxCXe4bYTP1vPpAf3v2o5eyx1+0t9B1iN4WXGWJADzyzNRXEATUJXnLfPINcjN0MaE1B2387NkYl2Xix7XdyE42fkWPPflcSjZ+RRMPFqe\/7GoYYPT3SvfjR1OkW3+PN\/amkw8\/+H4nH49L1\/L8W+Ph09oyxeVCtE+\/eJYZhSPeyBule2ijdS1O\/Y3z8jRuyL2tRwo8883WJx9p9v5913zedZnftiq\/dcspRVv0qxF5fN\/wuROUuxFbfITa\/8+tUiH9496Pp7wKb3yE2D6jV9PommfHHtqwCavd9ZbvtNY8yXf+bDzwXYr5DDOiBZ7amgjagJsFMoTfP3MG31UcrdVOX8fMphQa0pqDtvwfeGt13JGeL7w6fXPCgGOdTB7syzp6S80f39v77pBz99eUZH6e2PgJ05mxz13P\/LPF4XDrWv5++Tt+RpFPfEc79PeNEQ385+su\/SxXiVdNTv2XcW8iPzv5O30e9p1psf++\/OzYt9v1+1n3fLFchNk+r9AyxVQnOXGc5eH3d8LsQlVKIc5Nbis2C6vYo02bBzCy1M\/7Yli6wZrnOPcp05hGt3WzvN797VboM526LWcjNEp\/7d+Y6v\/T1KzjKNKAontmaCtqAupRBXamnFbovc0\/PfIN0Wrbd6WGK05tnNBqVIUOGBGaGeMiQIbYDWlOQnhuxWLsknvp8dpnMnGX91f9K\/XzSlj9I99IGObOjuffnlN6wnNHNP7hV9nIP\/PdP0uvum9W1+A6xRc4nY2L0nJfzRztSP9904oD9QbUylrn\/g+m+39fsm8Hj9XXD70KkQuxmnEnl73sgiALzzG5tbZXnn39eJkyYICNGjJChQ4fKNddcI0OHDpURI0bIAw88IC+88IK0t7f7vallEaQBdamDOqfTChXfzNMLlV+nZbq9fljDm6e1ID03OjYvzZtVTRfThv5y\/PX\/EONst3Qvmybdyxrl1PInxDh\/To69+M95H23Om9nNKarJxksk1t6aXnfXrO9lF+rcMm7xEejulgflzKd\/lO5FU7JmljMP3GU1U33gvUm+39fsm+FGCewrZdwX\/t33QBBp\/8yORqPyox\/9SEaMGCGPP\/64tLS0SHt7u5w+fVpERE6dOiVtbW3S0tIiTzzxhIwYMULuvfdeWbJkic9bXpogDahLHdQ5nWZViEsttBRi948P8gXpubFv8QzrjxmbB7Wa\/W0xjB45tW62nFrWKKc3vCRGT48cnfGNjOKcP7ObX2b7y96VL2ete09vGbeeGbafLba6XKGDaiWm9pfOBdN8v6\/ZN8ONEkj8Dq8bCCqtn9mTJk2SsWPHyooVKzxdb\/ny5XL\/\/ffLpEmTKrRllRekAXWpgzqn090UYrv\/el2+m+uHJbx5WgvSc+Pg7+8qWCgTvT+zdGbrH8ToOSfG6aPS03NeTq97tm9WuMEspdkff3Y7Q2t1EKzs7bEu28mc7wznHVSrIfu0jo1R3+9r9s1woxATv8PrBoJKy2f29u3b5brrrpOWlpaSljN\/\/nwZOnSo7Nq1q0xbVj1BGlCXOqizO93LbLHbQuu0TApx9n2DfEF6bhx6eXjfx44LHFQr0dBfjv7mm9K98GE5+ouvZXy0uu86hQ6qlWy8WDr\/9GDB9R94+8euDqpVaAY766PeBQ6q1fXCv\/p+P7NvgkJM\/A6vGwgq7Z7ZXV1dcv3115d1mTfccIN0dXWVdZmVFqQBdamDOrvTKcT+Pz7IF6TnxoE\/jiv8ceSc7+fmfjTa7iPKian9JfnU52Xfh2\/Yb8PurZJ4+rKChdfbx6lrer9D3Hf+kV\/8vcR3bfX9fmbfBIWY+B1eNxBUWj2zt2zZInfeeWdFln3HHXfItm3bKrLsSgjSgLrUQZ3d6eUuxHanUYitHwfkC9JzY++Hv\/P0Pd2+f+f+bnDG342fkYN\/+JHEW3e6244tK+Tw9K\/aHJTLXbLLc40cevk\/JL57m+\/3MfsmRCjExP\/wuoGg0uaZbRiGDBs2rKLrqPTyyylIA+pSB3Vez3M6YrSbyxVz\/TCGN09rgXpu7NoqycbPZH3kudDPHyUbMmdfM76z25CamU1O7S8H514vHdvWed+O1h3S+e4ESTZcnL\/89Pqzty\/9HeOcmeVDc66SeMC+M8y+qT8KMfE7vG4gqLR5Zj\/wwAMlf2fYybx587Q50FagBtQlDuqsYp5X6DqF\/nY6EnXuOtxeP6zhzdNa0J4bnc31+QelcvkR6WRDjSSmXSoH3hotsfa20rcnFpN9696Rw8\/\/mySe+CtJTvusJBsvyT7YVuPFcnTaZyQ57bOSePxzknj6K3Lwd3dIx6bFvt+X7JsohEJM\/A6vGwgqLZ7Z0WhU7r\/\/\/qqs67777pOlS5dWZV2lCNqAmgQzvHlaC+L+e\/D39+R\/hzd31ticCW6okcTjn5Ou5\/9V9q6cK\/FYrHLbFotJvL1V4m270om17ZZYe6vEKrlexcO+qR8KMfE7vG4gqLR4Zo8ePVpWrVpVlXUtX75c7r333qqsqxRBHFCT4IU3T2tB3X\/3bozKwTfvkCNPXyaJaZ\/t+zj045+VxFN\/I4ee\/Wc58KcHZe+6dyTWttv37Q1z2Df1QyEmfqfSrxuXXX5F0acVc5lyKWZdTtcpdLtzU+p2IEX5d8QdO3bIqFGjqrrOkSNHSmtra1XX6VVQB9QkWGHQbS3w+28sljoY1c5NEt+5OfXvEM\/Gqhj2Tf1QiInfqXYhNv8upvjpXIi93O7M0yjExVP+HXH27NnS1NRU1XU++eST8txzz1V1nV4FfkBNApEwDboTiYQMHTpUotGo42XZf4nfCdO+GRQUYuJ3VCjEVpexmy21Os\/uem7Pc7PdhZZlt\/zcbbdbj9W6UBzl3xHHjx8vH3zwQVXXuWDBApkwYUJV1+kVA2qiQ8I06K6rq0sfcK22tta2GLP\/Er8Tpn0zKCjExO9U43XDquAVKn1uimgx13Nzntd\/O51ndTkKcfUo\/4548803SywWq+o629raZMSIEVVdp1cMqIkOCdOgO5FISF1dnfTr18+xGLP\/Er8Tpn0zKCjEpNKZ\/uZW42vf+N\/G5f84UKzSr18\/qa2ttcy3v\/1to62tzfDynLYrvMXOFhdzXqHLub2e2wLrZVmFruP2O8SFtgnWlH9HvPbaa+XcuXNVXefp06dlyJAhVV2nVwyoiQ4J46DbTTFm\/yV+J4z7pu4oxKTSue62h4xbbrnFiEaj4jWjRo0ypkyZ4roQeym+hU63K4huymkxH38udFsKLcvt9pVyHadtpxQ7U\/4d8Zprrunxab1+rNY1BtREh6gy6DYMQx555JGq5oEHHpCBAwfKX\/zFX+QVY\/Zf4ndU2TfhHoWYVDrX3faQp1Kbqb6+3vV17YpaKTPEVpf3etlSZ3WL3b5S1m93PqXYHeXfEf2aIR46dGhV1+kVA2qiQ1QZdNfX18sPfvADefTRR6uWhx9+WH7wgx\/IhRdemC7EgwYNUrIQ79+4QA5snC+dG+dL56ZF0tG6zfE6e7etkQMb56ezd9sad+uLxWTPzk\/kwCfvy+HVL0hy6dOSWPaMHF4zVzo3L5KO1k89b\/+e3ZvT27Fvc9R527evkc7ey3dunC97t69zv75YTPbsWC8HP\/6THF75rCSXPi3JFb+SrjWvyv4ti6Wjbbvvj6dO+ybcoxCTSqdahVjEXSl2Oj1o3yH2+pFsp+tTht1T\/h3xpptuko6Ojqqus7W1VW6++eaqrtMr1QbUhFhFlUF3fX291NXVVWVdiURC6uvr5aKLLsorwibV9t8T8yfJyeYx0t08Vk6+P1aOf\/Az28vv3b6297Jj0jm8eo7jevbs+EiORhvT1+1u7rt+9\/up9XfPmyCJFTOko9V9sezctKhvGfPGy77tawtv+451vevs3f7msdK1dq6r9ezbukKOLXo047aby+i7HSfnTZDE6ucl3rbL98dVh30T7lGISaVTzUIs4u3gUYVOd\/ros9V5dtdze57ddhX6WLfX5VjdFjt8h7h4yr8jjhs3rupHmW5paeEo04SUIaoMuqtRiN0UYZNq+++JeROzym1381iJxdoLXv7ApgWp8vl+XzF0KsQHP3orXbgzS3Dfesem\/+5uHisn50+Ujl2bXW1\/qhCPTRfV4wsekVh7q+Vl929ZknVbT74\/RrrWOBfiwx++lHe9zNuSmxPzJ0u8dYfvj63q+ybcoxCTSqfahRhQhfLviH79DvHzzz9f1XV6pdqAmhCrqDLorkYhzvzZpUJF2KTa\/rt\/0yI5urQpo6g6FeKW1Gxubwk9uOEd2WPzkenOnALd3TxWTs6bKMc\/+LkcWT1HjqycJccXTpHueRNSy82YfXbz8e3OTYvS22IW7cMfWhf03EJ84JP3Zd+O9bbLP\/jRW73bPyY9q3xy3kQ5uniaHF79giRW\/kaOtzwsJ+eNz9r27uaxEmvb7fvjq\/K+CfcoxKTSoRAjrJR\/R9yxY4fccsstVV3nyJEjpbW1tarr9CoSicibb75JiNJRZdBdrRniIUOG2BZhk2qFOB6PS+fHf8oqc06FOP1R4fkP2C9793Y5Of+BjMtPlP0bFxS8fNfaV+Rk8zg52VuMj33wc4nHY46F+GTz2N6PXY9Jf\/y7Y3t+0e3cuiSrsDrdLx27Nkv3vPGpEtw8Rk60PCj7ti4vePkjq5\/L+Ej4WDm6tMn3x5ZCHAwUYlLpUIgRVlq8I44ePVpWr15dlXUtX75cfvSjH1VlXaUYOHCgfP\/73ydE6QwcONDvXUVEqvsdYjdULMQHPv5T30eWXRTi9IzpPPtCfGj9W9Ld3HvZ5rGuDmB1cMMfe4ttqhTv27rCuRDnfJc3tW0TJR5ry7psaoZ4bPrj207bklg5O31bu5vHyZ7dWx2v07Xm5b6Z8OZx0rFzo++PL4VYfxRiUulQiBFWWrwjRqNRGTduXFXWdf\/998vSpUursi4A1UEhdlmIe0ui03eIOze2ZB1Eym65J+ZPThfUxMqZ7rYnFpNjC+vT6ziycparQpwqrePlxLzx6UKaWDEj+7IZM8Qnm8c4bkt377JOvj9GDn78nrvtb2+TEy0Ppq93aN3vfH98KcT6oxCTSodCjLDS5h1xwoQJsmjRooquo6WlRSZOnFjRdQCoPgqxczo\/\/lP2R4lj7ZL6qHJ+Dmyc3\/edYIcZ4u7e4pmadbb\/6HNmDn30+76DZC2cYl\/QMw+q1TJZOjctzPrY8v6tS9OXzf0Osd02xNp2e\/p4dWaOrJiZvm5iiXofm6YQ64dCTCodCjHCSpt3xPPnz8t1111X0XUMGzasossH4A8KsXMO9BbibvNoz\/MmSHfz+NSBruZNSP09b3zqwFHmDOz7Y+2\/Q9y6I+tAXV62Z8+Oj9MH2OpuHiex9raCl+3cvKjvYFwtkyUWa5fksulZp8XbdqYK8dYl6QNwOZXcvTvX9\/08lMNMeN42bVrQu44xcnxRve+PL4VYfxRiUulU+3eInX4yyc0yvPLyk05hYXef2D1O5VhHOZRj2Vq9I3788cdyzz33VGTZd911l2zevLkiywbgLwqxu0LcbfUzQr2lLu87us1jUweasinEHa3bXM\/G5pfpnOu2F\/5d3\/QM8ftjpLu3EMfbd8vJjI87J5anPjrd6WGGeO+21enbfmLeeE\/bv+\/TVb330Rg5sfAR3x9fCrH+KMSk0qlWIS70+75257tdjpvruPlN4DDx+rvP5VxHOYSuEIuIdHV1yQ033FDWZV5\/\/fVy+PDhsi4TgDooxB4LcfNYOdHykJxY8FDffxc8JCcWPCwnWh6Wky2TMr5DbDND3L67b4bVYyHet31NqnCb31OO2c8Qp9czf1L649V7t63J+r3jfdtW5RRi+xniPTs+Tv9PgG6PhfjAx\/+d\/tj2sUU\/8\/3xpRDrj0JMKh0VCrHVbGQpp1mtx00hdpq9LrQeu23IPL3U9Xldv9Ny3JZfq\/9xUe7HqtjbVgot3xG3bt0qw4cPl5aWlpKW09LSIsOGDZOdO3eWacsAqIhC7LIQZxxUq6O9teBls76H6\/Qd4ozfBt6ze7Pr7Tm8clZ6Hceij9leNuugWuYMce95RzKWc7J5rOzf\/IGng2plziZ7+U3h5OIn+g4KtuI3vj++FGL9UYhJpeNnIS50vl35cXs5q9ML\/dfNOovZBrfLcHPZYtfv9np2p5dyO0q5nNvrFEvbd8Tz58\/LhAkTZOzYsfLhhx96uu7q1avl\/vvvl4kTJ4ph8P1\/IOgoxO4KcWo2NPVRaKdCnP5+rkMhPhadmv6I9YmWh9xtT+uO3lnoVEHvWveGcyHu\/R3ikzmFON62S04seCSjBE\/o+8i3i1nrzKNFH13yhKvt37Nzo5yaPyG9js6N83x\/fCnE+qMQk0rnzgdnGV++7KvGd79XK1b5h3\/4B6mtrbXM1772NZkzZ07Fv0NcjULsdp3lul6x51VqHZmne3mcyl2Ii1l2sbR\/R1y8eLHcc889MmrUKGlqapJFixZJR0eHnDt3TkREzp07Jx0dHbJw4UJpamqSkSNHyujRo\/lpJSBEKMQuC7E5y\/r+GFczxG6OMr1v6\/KMn0QaI4c\/\/K3t5WNtrXJ08bR0ae2eN0E6dtn\/9m\/n5kV9B8rKLcTxuOz7dGVfgc\/5jrTz\/fJ+1uUPfvSW7eU72nfLsYU\/7fuu9YIHPc0sU4hRCIWYVCMPP9NcMJFIRKLRaMGUwqkwFfrYbaHLlFqI3ayzXNez23avpbPY9VtxKpoUYgVt375dZs+eLePGjZObbrpJrr32Wrnmmmvk2muvlRtvvFHGjx8vs2fP5uPRQAhRiN0XYrPo2hfixamC6XSU6Xhc4vGYHF3yRPpnmrqbx8rRxU9IR+v2vMvu3bFBji94JKu4dq2d67jtmYU4b4a4N1kfnfZyoK9YmxxbWJf+HwUnm8dKcvkvJdZ71Oqs4r1ttZzMmFHubh4rBz5p9v2xpRAHA4WY+J1yvW64+Shuoct6\/dhvofXYFeJqzMK63fZSZohLvR6FGAAChELsnM6cg2o5FWK33yGOx+MSb9uZKorNOYW0eawc\/+BROb5wStYMrjmbfMzFzxV1ffhbOf7Bo30H1SpQiOPxeOrno7IKsbufgurYvUVO5l03tZ1HP3hUji\/8ieXsc3LpM74\/rhTi4KAQE7\/jdyF2miF2WoeX9bhZZynbWo4i7eWyOhbicvwPBbd4RwQQeBRi56QOqpU60JT7j0yPcTFD3JvWHXJsYV3WTzaZv9Ob\/ni0WYibx0py+a9cLbeviPb+DJRNId6za3Pfz0W5PKhWuhTv\/EROLHwk67onM0pwevubx0h38zjpWvWC748phThYKMTE75TzdaPQR3szz7P626lYWi0vd9lO\/3ZaZ6Hl2V3P7XleSma5llPoPvNaiJ3W7\/axcjrd7f\/88IJ3RACBRyF2W4jHuj+oVnqGeIL79cRicmjDO+kDVXU3Z8+2djePleOLfib7Ny+WWCzmapmZP6vU\/f4YOfaB\/RGpu9a+2legPf4UVKytVQ6tfV1Ozp+YtYzMme+j0UbZ++kq3x9PCnHwUIiJ3+F1o3zKUeJQPjyzAQQehdhF2nbInp0fpxO3K6TtuzMu+4n3dbW3yZ5dG2X\/5qgcWv+2HFz\/juzbskz27N4q8QKzu4WSuc17dn4ssbbCRT4ej0s81pZ9O4u5r9pbZc\/ODdK5aaEcXP+2HNjwruz7dKV0tG5zXeT9DgNb\/VCIid\/hdaN4djPi8B\/PbACBRyEmJDsMbPVDISZ+h9cNBBXPbACBRyEmJDsMbPVDISZ+h9cNBBXPbACBRyEmJDsMbPVDISZ+h9cNBBXPbACBRyEmJDsMbPVDISZ+h9cNBBXPbACBRyEmJDsMbPVDISZ+h9cNBFVgn9lnzpwx3n777Z7Tp08bfm8LAH9RiAnJDgNb\/VCIid\/hdQNBFdhn9nvvvWcMHjzYePfddynEQMhRiAnJDgNb\/VCIid\/hdQNBFdhn9tVXX21s2LCh56qrrqIQAyFHISYkOwxs9UMhJn6H1w0EVSCf2e+9954xZcoUQ0RkypQpzBIDIUchJiQ7DGz1QyEmfofXDQRVIJ\/ZV199tbF3715DRGTfvn0Gs8RAuFGICckOA1v9UIiJ3+F1A0EVuGd25uywiVliINxUK8Rf+cpXjCuvvFII8SuXXXYZ74ma+eKXv2p844qBQohf+eKXvsLrBgIpcIU4c3bYxCwxEG6qFeK2tjaJRqOE+Ja2tja\/dwN4xOsG8Tu8biCoAlWIrWaHTcwSA+GlWiEGAACAGgJViK1mh03MEgPhRSEGAACAlcAUYrvZYROzxEA4UYgBAABgJTCF2G522MQsMRBOFGIAAABYCUQhdjM7bGKWGAgfCjEAAACsBKIQu5kdNjFLDIQPhRgAAABWtC\/EXmaHTcwSA+FCIQYAAIAV7Quxl9lhE7PEQLhQiAEAAGBF60JczOywiVliIDwoxAAAALCidSEuZnbYxCwxEB4UYgAAAFjRthCXMjtsYpYYCAcKMQAAAKxoW4hLmR02MUsMhAOFGAAAAFa0LMTlmB02MUsMBB+FGAAAAFa0LMTlmB02MUsMBB+FGAAAAFa0K8TlnB02MUsMBBuFGAAAAFa0K8TlnB02MUsMBBuFGAAAAFa0KsSVmB02MUsMBBeFGAAAAFa0KsSVmB02MUsMBBeFGAAAAFa0KcSVnB02MUsMBBOFGAAAAFa0KcSVnB02MUsMBBOFGAAAAFa0KMTVmB02MUsMBA+FGAAAAFa0KMTVmB02MUsMBA+FGAAAAFaUL8TVnB02MUsMBAuFGAAAAFaUL8S33HKLceutt\/b813\/9l1Gt3HrrrcYtt9zS4\/dttxOJRAjRIiqgEAMAAMCKGqNVG3v37jXWrl1b9VTrI9rFikQiEo\/HCVE6FGIAAACoTI3RKjyjEBMdQiEGAACAytQYrcIzCjHRIRRiAAAAqEyN0So8oxATHUIhBgAAgMrUGK3CMwox0SEUYgAAAKhMjdEqPKMQEx1CIQYAAIDK1BitwjMKMdEhFGIAAACoTI3RKjyjEBMdQiEGAACAytQYrcIzCjHRIRRiAAAAqEyN0aqNdevWGbNmzap61q1bZ\/h92+1QiIkOoRADAABAZWqMVm0MGDBAZs6caVQ7AwYM8Pum26IQEx1CIQYAAIDK1Bit2vCrmFKICSk9FGIAAACoTI3Rqg0KsTUdCnEkEslLKcuq5HaWuu5ybJ8Oj2kxt0kFFGIAAABYUWO0aoNCbE2H8mS1jcVut1+F2DyvHKXZz9vo53NABRRiAAAAWFFjtGqDQmxNh\/LkVIityqbVbLLb03LPK3R67nnFFuLMZVkt025dpdxGtyVdhVCIAQAAoDI1Rqs2KMTWdClDdqdZFUC7y5ZyObfXKbS9Ttf3sq5ybK8Oj7+5rSqgEAMAAMCKGqNVGxRia6oVIqfZXjczs+UuxMUsu9jruCnVlbqNKs8YU4gBAACgMjVGqzYoxNZUKj9uZlG9Fs5ylcVSr1Oo0LvZdq\/Xc\/s\/E+xm3lV6XpjbowIKMQAAAKyoMVq1QSG2pkrxcfqOrZvrFlMWiym3lbxOuc9zO+Ps9rHw8\/mhAgoxAAAArKgxWrVBIbamWulxKnteC6eXsliJ7xB7LZ1OM712f5dze1V6Xpjb46Stra3i+wuFGAAAAFYoxIqt1y0Vi4+b4uZUOq0+ImxXLO2W4WXZbrbN6va52V6r+6SU21job9WeE+Y2FRKNRqW2tlYikUjFSzGFGAAAAFYoxIqt1y0Vyw9xVxD93oZq395cmUU4EolIv3795O23367o\/kIhBgAAgBUKsWLrdStsxSooCdvjllmIrYpwXV2dJBKJiu8vFGIAAABYoRArtl63wlasiJ6JRCK+FmEThRgAAABWKMSKrdctCjHRIbnfs\/6zP\/szueCCC6qeP\/\/zP5cFCxb4vdsCAABAMRRixdbrFoWY6BBzhnjgwIHpUvz5z39enn32WTl16lRVAwAAAOSiECu2XrcoxESH5H6HeNCgQeli\/IUvfEFefPFFH\/ciAAAAhB2FWLH1ukUhJjqk0FGmc4txNBqt\/k4EAACA0KMQK7ZetyjERIc4\/Q6xWYwpxAAAAPADhVix9bpFISY6xK4QmzZs2FCFPQYAAADIRyFWbL1uUYiJDnFTiAEAAAC\/KD9apRBboxATHUIhBgAAgMqUH61SiK1RiIkOoRADAABAZcqPVinE1ijERIdQiAEAAKAy5UerFGJrFGKiQyjEAAAAUJnyo1UKsTUKMdEhFGIAAACoTPnRKoXYGoW4fIXN6d+ktPsXAAAAUJXyo1UKsTUKG9EhFGIAAACoTPnRKoXYGoWY6BAKMQAAAFSm\/Gh1wIABMmvWLKPa+da3vmX4fdvtUIiJDqEQAwAAQGXKj1bXrl1rzJw5s+pZu3YthZiQEkMhBgAAgMoYrWqKQkx0CIUYAAAAKmO0qikKMdEhFGIAAACojNGqpijERIdQiAEAAKAyRquaohATHUIhBgAAgMoYrWqKQkx0CIUYAAAAKmO0qikKMdEhFGIAAACojNGqpijERIdQiAEAAKAyRquaohATHUIhBgAAgMoYrWqKQkx0CIUYAAAAKmO0qqlIJEKIFgEAAABUxWgVAAAAABBKyhTiSswsMTsFAAAAAChEmcZoVV4ptAAAAACASlGmcRYqv7mnW80gW13G7rpW6yjmPAAAAACAvpRpeW4KsZfia3ddN8t0Og8AAAAAoDdlGl4phTjz326Lr5dlAgAAAACCR5nG57YQFzrwVimF2O5gXnxkGgAAAACCSZmWV8wMsdXlSp0hLmYbAQAAAAD6UabhuTnKdCl\/8x1iAAAAAEAmZRqe298hdjoitNPfHGUaAAAAACCiUCEGAAAAAKCaKMQAAAAAgFCiEAMAAAAAQolCDAAAAAAIqhfHpQAAAKRJREFUJQoxAAAAACCUKMQAAAAAgFCiEAMAAAAAQolCDAAAAAAIJQoxAAAAACCUKMQAAAAAgFCiEAMAAAAAQolCDAAAAAAIJQoxAAAAACCUKMQAAAAAgFCiEAMAAAAAQolCDAAAAAAIJQoxAAAAACCUKMQAAAAAgFCiEAMAAAAAQolCDAAAAAAIJQoxAAAAACCUKMQAAAAAgFCiEAMAAAAAQun\/AzZwTapP9v9RAAAAAElFTkSuQmCC\u0022 style=\u0022height:237px; width:723px\u0022 \/\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.ditto","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/ditto.png","website":"https:\/\/www.eclipse.org\/ditto","state":"Incubating","provisioned":true},"technology.sensinact":{"name":"Eclipse sensiNact","id":"technology.sensinact","description":"\u003Cp\u003EThe Eclipse sensiNact project consists of a software platform enabling the collection, processing and redistribution of any data relevant to improving the quality of life of urban citizens, programming interfaces allowing different modes of access to data (on-demand, periodic, historic, etc.) and application development and deployment to easily and rapidly build innovative applications on top of the platform.\u003C\/p\u003E\r\n\u003Cp\u003E\u003Ca href=\u0022http:\/\/sensinact.ddns.net\/studio-web\/\u0022\u003EHere \u003C\/a\u003Ea quick look to the existing data available via sensiNact platform from various cities such as Santander, Genova, Fujisawa and Osaka (click \u0026nbsp;the \u0026quot;+\u0026quot; button and click \u0026quot;Add\u0026quot; accepting the default gateway configuration data)\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 height=\u0022185\u0022 src=\u0022https:\/\/wiki.eclipse.org\/images\/e\/e3\/Sna_architecture.png\u0022 style=\u0022float: right;\u0022 width=\u0022200\u0022 \/\u003E\u003C\/p\u003E\r\n\u003Cp\u003EAt the heart of sensiNact lies its service-oriented approach in which IoT devices expose their functionalities in terms of services (temperature service, presence detection service, air quality monitoring service, alarm service, etc.). Each service then exposes one or several resources such as sensor data or actions. Building applications thus become a matter of composing sensing services with actuation services. Loosely coupling between the devices and the services they implement makes the composition of services more dynamic and adaptable to the changing context, not only in the software environment (increasing CPU or memory usage, low battery, reducing quality of measures, etc.) but also in the physical environment (replacing sensors, changing localization, etc.).\u003C\/p\u003E\r\n\u003Cp\u003EsensiNact particularly deals with the following 4 topics.\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cstrong\u003EConnectivity\u003C\/strong\u003E\u003C\/p\u003E\r\n\u003Cp\u003EHeterogeneity of data is today\u0026rsquo;s reality in every urban environment. Emerging IoT devices, legacy systems, increasing number of social networks, mobile applications, open data repositories and web data are the potential exploitable data sources. sensiNact thus provides connectivity support to those data sources including today\u0026rsquo;s IoT protocols and platforms such as LoRa, Zigbee, IEEE 802.15.4, Sigfox, enOcean, MQTT, XMPP, NGSI, HTTP, CoAP, etc. With its modular approach, connectivity support for new protocols can be rapidly developed and dynamically added to the platform, even at run-time.\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cstrong\u003EInteroperability\u003C\/strong\u003E\u003C\/p\u003E\r\n\u003Cp\u003EsensiNact platform provides a unified view over those heterogeneous sources of data and action. With the lack of a de facto standard data model today in the IoT domain, sensiNact adopts a generic and extensible data model to facilitate building adapters for various protocols. It\u0026rsquo;s core model based on 4 types of resources: sensor data, action, state variables, and properties.\u003C\/p\u003E\r\n\u003Cp\u003EThose resources are accessible by generic and easy to use Application Programming Interfaces (API) providing synchronous (on demand) and asynchronous (periodic or event based) access to data\/actions of IoT devices, as well as access to historic data.\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cstrong\u003EData and event processing\u003C\/strong\u003E\u003C\/p\u003E\r\n\u003Cp\u003EsensiNact follows a distributed approach for data and event processing. From the device layer to the Cloud layer, passing through the gateway level, data are processed as close as possible to the data source. sensiNact provides data processing functions, varying from simple filters to more complex aggregation functions on streaming data. sensiNact also provides extension points allowing addition of new functions to the platform.\u003C\/p\u003E\r\n\u003Cp\u003E\u003Cstrong\u003EDeveloper tool\u003C\/strong\u003E\u003C\/p\u003E\r\n\u003Cp\u003EOn top of the platform, sensiNact proposes a development tool (sensiNact Studio) that allows managing devices\/services connected to the platform and rapidly creating applications and deploying them to the platform. It is a service composition tool which assists developers in building applications by binding the services via events and actions. With a Domain Specific Language, the developers can express the application logic in terms of ECA (Event-Condition-Action) rules, which is verified and validated by the tool before its deployment into the sensiNact platform. The application developers can then remotely monitor and manage applications (install, start, stop, uninstall, etc.). The tool also provides means to easily build support for new types of protocols and platforms and add it to the platform on-the-fly.\u003C\/p\u003E\r\n\u003Cp\u003EWe can list the features of sensiNact as a glance as follows:\u003C\/p\u003E\r\n\u003Cp style=\u0022margin-left:14.2pt;\u0022\u003E\u0026bull;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003Cmap name=\u0022MicrosoftOfficeMap0\u0022\u003E\u003Carea coords=\u002289, 283, 181, 340\u0022 href=\u0022file:\/\/\/C:\/Users\/lg224981\/Documents\/Documents\/projets\/ClouT\/WP5\/dissemination%20materiels\/ClouT%20Video\/010Seq.mp4\u0022 shape=\u0022Rect\u0022 \/\u003E\u003C\/map\u003E\u003Cstrong\u003EPlug\u0026amp;play\u003C\/strong\u003E: Device as a Service Approach. The flexibility of adding\/removing\/updating devices with a minimum impact on the running platform ;\u003C\/p\u003E\r\n\u003Cp style=\u0022margin-left:14.2pt;\u0022\u003E\u0026bull;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cstrong\u003EModular\u003C\/strong\u003E: Modular development and deployment for enhanced system maintenance and evolution ;\u003C\/p\u003E\r\n\u003Cp style=\u0022margin-left:14.2pt;\u0022\u003E\u0026bull;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cstrong\u003EDependable\u003C\/strong\u003E: sensiNact\u0026rsquo;s formal data and service models facilitate reliable IoT applications development ;\u003C\/p\u003E\r\n\u003Cp style=\u0022margin-left:14.2pt;\u0022\u003E\u0026bull;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cstrong\u003EScalable\u003C\/strong\u003E: sensiNact\u0026rsquo;s three layers architecture (device\/gateway\/cloud) allows distribution of data processing at different levels ;\u003C\/p\u003E\r\n\u003Cp style=\u0022margin-left:14.2pt;\u0022\u003E\u0026bull;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cstrong\u003EEasy\u0026amp;quick\u003C\/strong\u003E: sensiNact\u0026rsquo;s comprehensive data model and APIs help to rapidly build IoT applications.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.sensinact","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/sensiNact_logo.png","website":null,"state":"Incubating","provisioned":true},"iot.keti":{"name":"Eclipse Keti","id":"iot.keti","description":"\u003Cp\u003EKeti is a service that was designed to protect RESTfuls API using Attribute Based Access Control (ABAC).\u003C\/p\u003E\r\n\u003C!--break--\u003E\r\n\r\n\u003Cp\u003EThe solution itself is implemented as a cloud-native RESTful API that adheres to the guiding principles of the \u003Ca href=\u0022https:\/\/12factor.net\/\u0022\u003Etwelve factor app\u003C\/a\u003E. Key characteristics of the service include:\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003ECentral management of policies and privileges\u003C\/li\u003E\r\n\t\u003Cli\u003EThe ability to manage hierarchical privileges (e.g. sub-groups) and scoped privileges (e.g. assigning elevated privileges based on the resource accessed)\u003C\/li\u003E\r\n\t\u003Cli\u003EA policy format tailored for developers who build RESTful APIs\u003C\/li\u003E\r\n\t\u003Cli\u003EAn access control decision engine\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/projects.spring.io\/spring-boot\/\u0022\u003ESpring Boot\u003C\/a\u003E is the primary framework that Keti is built on. Additionally Keti uses the following open source libraries:\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\u003Ca href=\u0022http:\/\/janusgraph.org\/\u0022\u003EJanusGraph\u003C\/a\u003E, an implementation of \u003Ca href=\u0022https:\/\/tinkerpop.apache.org\/\u0022\u003EApache TinkerPop\u003C\/a\u003E, for it\u0026#39;s graph data structure\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Ca href=\u0022https:\/\/github.com\/xetorthio\/jedis\u0022\u003EJedis\u003C\/a\u003E as a \u003Ca href=\u0022http:\/\/redis.io\/\u0022\u003ERedis\u003C\/a\u003E client for caching\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Ca href=\u0022http:\/\/projects.spring.io\/spring-security\/\u0022\u003ESpring Security\u003C\/a\u003E to protect it\u0026#39;s API\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Ca href=\u0022http:\/\/projects.spring.io\/spring-data-jpa\/\u0022\u003ESpring Data JPA\u003C\/a\u003E for persistence to RDBMS\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003EAn operator deploys Keti in the same datacenter where the web services it protects are deployed. Either a common gateway, or the web service itself, sends requests for authorized access to Keti and enforces the decision received in the response. When deployed, Keti typically has the following service dependencies.\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\u003Ca href=\u0022https:\/\/github.com\/cloudfoundry\/uaa\u0022\u003EUAA\u003C\/a\u003E as an OAuth server\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Ca href=\u0022http:\/\/redis.io\/\u0022\u003ERedis\u003C\/a\u003E (optional) for decision caching\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Ca href=\u0022http:\/\/cassandra.apache.org\/\u0022\u003ECassandra\u003C\/a\u003E through JanusGraph for graph persistence\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Ca href=\u0022https:\/\/www.postgresql.org\/\u0022\u003EPostgreSQL\u003C\/a\u003E, or \u003Ca href=\u0022http:\/\/www.h2database.com\/html\/main.html\u0022\u003EH2\u003C\/a\u003E as a RDBMS\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003EBelow is a basic diagram of how Keti fits in the interaction between web application and web service.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cimg alt=\u0022\u0022 src=\u0022https:\/\/raw.githubusercontent.com\/predix\/acs\/diagram\/docs\/diagram-0.png\u0022 style=\u0022height:398px; width:682px\u0022 \/\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.keti","logo":null,"website":null,"state":"Incubating","provisioned":true},"technology.iottestware":{"name":"Eclipse IoT-Testware","id":"technology.iottestware","description":"\u003Cp\u003EIt is the aim of the project to supply a rich set of TTCN-3 test suites and test cases for IoT technologies to enable developers in setting up a comprehensive test environment of their own, if needed from the beginning of a project. TTCN-3 has been defined and standardized by the European Telecommunication Standards Institute in ETSI ES 201873 and related extension packages. It is implemented and supported in Eclipse IoT by the Titan project.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe initial contribution of IoT-Testware to Eclipse will focus on protocols like CoAP and MQTT. This list will be extended during the project. To ensure test and implementation technology independence, and the test suites will be realized in TTCN-3 and implemented with Titan. The test suites will contain tests for conformance, interoperability, robustness, and security aspects.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EEclipse Titan has already protocol modules for IoT including type systems and codec. IoT-Testware will rely on these type systems and develop codec libraries and test cases based on them.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe IoT-Testware test suites will have a well-defined test suite structure (TSS) and a set of protocol implementation conformance statements (PICS) as well as protocol implementation extra information for testing (PIXIT). The work will follow the standardized approach as defined in ISO \u0026ldquo;Conformance Test Methodology and Framework\u0026rdquo; IS 9646 and the best practices as described by ETSI White Paper No 3 \u0026ldquo;Achieving Technical Interoperability \u0026ndash; the ETSI Approach\u0026rdquo;.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cstrong\u003EHistory: \u003C\/strong\u003EOriginally the project has been initiated in early 2017 by Prof. Dr. Ina Schieferdecker from Fraunhofer FOKUS in Berlin. We started with the two (functional) protocol testsuites for CoAP and MQTT that have been made public in summer 2017. First test purpose descriptions had been written using tables in Word files only. In autumn 2017 the ETSI TC MTS working group \u0026quot;TST\u0026quot; had been created to develop corresponding test purposes written using the ETSI notation TDL-TO (ES 203119-4). In 2018 additional work started for test case developments for OPC-UA and also further security fuzzing tests.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/technology.iottestware","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/IoT-Testware-logo.PNG","website":null,"state":"Incubating","provisioned":true},"iot.kuksa":{"name":"Eclipse Kuksa","id":"iot.kuksa","description":"\u003Cp\u003E\u003Cspan style=\u0022color:rgb(0, 0, 0); font-family:arial,sans-serif; font-size:14px\u0022\u003EBecause today\u0026#39;s software-intensive automotive systems are still developed in silos by each car manufacturer or OEM in-house, long-term challenges in the industry are yet unresolved. Establishing a standard for car-to-cloud scenarios significantly improves comprehensive domain-related development activities and opens the market to external applications, service provider, and the use of open source software wherever possible without compromising security. Connectivity, OTA maintenance, automated driving, electric mobility, and related approaches increasingly demand technical innovations applicable across automotive players.\u003C\/span\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022color:rgb(0, 0, 0)\u0022\u003EThe open and secure Eclipse Kuksa project will contain a cloud platform that interconnects a wide range of vehicles to the cloud via in-car and internet connections. This platform will be supported by an integrated open source software development environment\u0026nbsp;including technologies to cope especially with software challenges for vehicles designed in the IoT, Cloud, and digital era.\u003C\/span\u003E\u003C\/p\u003E\r\n\u003C!--break--\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022color:rgb(0, 0, 0)\u0022\u003EThis ecosystem will provide a comprehensive environment across various frameworks and technologies for (a) the in-vehicle platform, (b) the cloud platform, and (c) an app development IDE - that is, the complete tooling stack for the connected vehicle domain (see Figure 1 below). Essential to this environment will be the capabilities for collecting, storing, and analysing vehicle data in the cloud as well as the transmission of diverse information such as cloud calculation results (e.g. improved routing), software maintenance updates or even complete new applications. While many IoT solutions exist in the Eclipse IoT ecosystem, Eclipse Kuksa combines the necessary existing technologies and fills the gaps for the specific requirements of the connected embedded real-time nature of the automotive domain.\u003C\/span\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022color:rgb(0, 0, 0)\u0022\u003E\u003Cimg alt=\u0022\u0022 src=\u0022https:\/\/gitlab-pages.idial.institute\/robert.hoettger\/web\/_images\/EKuksa.png\u0022 style=\u0022height:453px; width:600px\u0022 \/\u003E\u003C\/span\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.kuksa","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/kuksa%20mix.png","website":null,"state":"Incubating","provisioned":true},"iot.cyclonedds":{"name":"Eclipse Cyclone DDS","id":"iot.cyclonedds","description":"\u003Cp\u003E\u003Cspan style=\u0022font-size:12px\u0022\u003E\u003Cspan style=\u0022color:rgb(51, 51, 51)\u0022\u003EEclipse Cyclone DDS is an implementation of the OMG Data Distribution Service (DDS) specification (see http:\/\/www.omg.org\/spec\/DDS\/ ) and the related specifications for interoperability (see\u0026nbsp;http:\/\/www.omg.org\/spec\/DDSI-RTPS\/ )\u003C\/span\u003E\u003C\/span\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022font-size:12px\u0022\u003EWith \u0026#39;DATA\u0026#39; being \u0026#39;the currency of the IOT\u0026#39;, having a proper data-sharing technology will be a key-asset in any IOT-platform. The OMG DDS standard is recognized as a highly applicable standard for reliable and robust data-sharing in business- and mission-critical environments (\u003Cspan style=\u0022font-family:arial,sans-serif\u0022\u003Esee\u0026nbsp;\u003C\/span\u003E\u003Ca class=\u0022external-link\u0022 href=\u0022http:\/\/www.iiconsortium.org\/IIRA.htm\u0022 rel=\u0022nofollow\u0022 style=\u0022color: rgb(53, 114, 176); text-decoration-line: none; font-family: Arial, sans-serif; font-size: 14px;\u0022 target=\u0022_blank\u0022\u003Ehttp:\/\/www.iiconsortium.org\/IIRA.htm\u003C\/a\u003E\u0026nbsp;and\u0026nbsp;\u003Ca href=\u0022http:\/\/www.iiconsortium.org\/IICF.htm\u0022\u003Ehttp:\/\/www.iiconsortium.org\/IICF.htm\u003C\/a\u003E\u003Cspan style=\u0022font-family:arial,sans-serif\u0022\u003E\u0026nbsp;)\u0026nbsp;\u003C\/span\u003Eand with that a great fit with the Eclipse-IOT ecosystem.\u003C\/span\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022font-size:12px\u0022\u003EEclipse Cyclone DDS offers unique data-sharing capabilities compared to the already existing Eclipse solutions (i.e. for messaging).\u003C\/span\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022font-size:12px\u0022\u003EIts data-centric architecture (where data has RDBMS-like structure and relations rather than \u0026#39;blobs\u0026#39; as typically used in lower level messaging products) combined with the capability to \u0026#39;annotate\u0026#39; the data(-models) with fine-grained QoS properties (for reliability, urgency, persistency etc.) provide unrivalled functional and non-functional properties for time- and mission\/business-critical IOT-systems.\u003C\/span\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022font-size:12px\u0022\u003EWith a history of proven applicability in the military C4I domain (that are not so much unlike upcoming large-scale IOT-systems where you can also distinguish between planning-, awareness- and execution-grids that all impose specific requirements w.r.t. interoperabillity, high-volume data-sharing and deterministic\/real-time data-access) we are confident that \u0026nbsp;starting from day-1 this offering can significantly reduce the complexity of many IOT-systems and with that reduce their integration efforts and risks.\u0026nbsp;\u003C\/span\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022font-size:12px\u0022\u003EFurthermore we are confident that the Eclipse-IOT ecosystem will benefit even more by active participation in the evolution of this technology and the (OMG-)standard its based upon.\u003C\/span\u003E\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.cyclonedds","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/CycloneDDS.PNG","website":null,"state":"Incubating","provisioned":true},"iot.thingweb":{"name":"Eclipse Thingweb","id":"iot.thingweb","description":"\u003Cp\u003EThe Eclipse Thingweb project will start with three sub-projects in the toolkit:\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cstrong\u003EThingweb node-wot\u003C\/strong\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003Enode-wot is the official reference implementation of the W3C WoT Working Group and implements the so-called \u0026quot;Servient Architecture\u0026quot;:\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cimg alt=\u0022Servient Architecture\u0022 src=\u0022https:\/\/www.w3.org\/TR\/wot-architecture\/images\/architecture-implementation.png\u0022 style=\u0022height:40%; width:40%\u0022 \/\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003Enode-wot provides a \u003Ca href=\u0022http:\/\/www.w3.org\/TR\/wot-thing-description\/\u0022\u003EWoT Thing Description\u003C\/a\u003E parser and serializer, several \u0026quot;Protocol Binding\u0026quot; implementing the \u003Ca href=\u0022http:\/\/w3c.github.io\/wot-binding-templates\/\u0022\u003EWoT Binding Templates\u003C\/a\u003E, as well as a runtime system (\u0026quot;WoT Runtime\u0026quot;) providing the \u003Ca href=\u0022http:\/\/www.w3.org\/TR\/wot-scripting-api\/\u0022\u003EWoT Scripting API\u003C\/a\u003E for applications. It is based on Node.js and its fundamental module structure.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cstrong\u003EThingweb Directory\u003C\/strong\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003EA Thing Directory is a directory service for WoT Thing Descriptions (TDs) that provides a Web interface to register TDs (aligned with \u003Ca href=\u0022https:\/\/tools.ietf.org\/html\/draft-ietf-core-resource-directory\u0022\u003Edraft-ietf-core-resource-directory\u003C\/a\u003E) and look them up (e.g., using SPARQL queries or CoRE Link Format). The Thingweb Directory implements this service using the \u003Ca href=\u0022https:\/\/jena.apache.org\/\u0022\u003EApache Jena\u003C\/a\u003E triple store and SPARQL endpoint.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cstrong\u003EThingweb WebUI\u003C\/strong\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThingweb also intends to provide tooling around the Web of Things ecosystem. The \u003Ca href=\u0022http:\/\/plugfest.thingweb.io\/webui\/\u0022\u003EWebUI\u003C\/a\u003E is an \u003Ca href=\u0022https:\/\/angularjs.org\/\u0022\u003EAngularJS\u003C\/a\u003E browser app to visualize TDs and enable the interaction with Things from the Web browser.\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.thingweb","logo":null,"website":null,"state":"Incubating","provisioned":true},"iot.mita":{"name":"Eclipse Mita","id":"iot.mita","description":"\u003Cp\u003EEclipse Mita is a programming language for the embedded IoT. We combine a declarative setup of system resources (e.g. Bluetooth connectivity or a temperature sensor) with a modern imperative language. We introduce first-class primitives for sensor access and connectivity to other systems, which allows for quick exploration and integration into IoT ecologies. We support embedded algorithm through powerful primitives, e.g. lists, vectors and statistic functions. In order to prevent problems at compile-time Mita has a static strong type-system. Lastly, we offer direct interaction with sensor data and in-situ developer support by integrating with the embedded software development toolchains.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe demo below gives an incling of how the language works:\u003Cbr \/\u003E\r\n\u003Ciframe frameborder=\u00220\u0022 height=\u0022315\u0022 src=\u0022https:\/\/www.youtube-nocookie.com\/embed\/Iv68Yc3u7i4\u0022 width=\u0022560\u0022\u003E\u003C\/iframe\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.mita","logo":"http:\/\/projects.eclipse.org\/sites\/default\/files\/logo_3.png","website":null,"state":"Incubating","provisioned":true},"iot.hip":{"name":"Eclipse HIP","id":"iot.hip","description":"\u003Cp\u003EThrough HIP, localised processing or preperation of data is intended to reduce the connectivity and central processing requirements within IOT - much like the contemporary Fog computing paradigm, but without the need for sophisticated edge computing solutions.\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv\u003E\r\n\u003Cp\u003EBase \u003Cstrong\u003EDevice\u003C\/strong\u003E\u0026nbsp;messages enable core functionality supports each \u0026quot;thing\u0026quot; in a deployment, with additional roles being configured through \u003Cstrong\u003EConfiguration \u003C\/strong\u003Emessages, and functionality enabled through \u003Cstrong\u003EHandler \u003C\/strong\u003Emessages and files\u003C\/p\u003E\r\n\u003Cimg alt=\u0022\u0022 src=\u0022https:\/\/hiot.io\/g490.png\u0022 \/\u003E\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIn the above diagram, we have a very small and simple deployment (left of the dashed line) connected to the Platform on the right. Looking at the dashed line, all communication between the deployment and the platform is via a Coordinator on the deployment side\u0026nbsp;\u003Cspan style=\u0022background-color:rgb(0, 255, 0)\u0022\u003E[ CR ]\u003C\/span\u003E\u0026nbsp;and the Coordinator Link\u003Cspan style=\u0022color:rgb(240, 255, 255)\u0022\u003E\u0026nbsp;\u003Cspan style=\u0022background-color:rgb(0, 51, 204)\u0022\u003E[ CrL ]\u003C\/span\u003E\u003C\/span\u003E\u0026nbsp;on the Platform side, alllowing us to isolate other devices from the Internet.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe Orange Flow in the diagram is a command sent by a user to a particular actuator or controller (e.g. turn lights on\/off), the blue flow represents data collection and aggregation across the deployment.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cspan style=\u0022font-family:arial,sans-serif; font-size:12.8px\u0022\u003E[ D ] - these are HIP enabled devices and can have a number of different roles which are described below.\u0026nbsp;\u003C\/span\u003E\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E[ S ] - Sensors - \u0026nbsp;can be local sensors (e.g. temperature\/lighting sensors connected to the GPIOs) or external, third party devices. Handler files are deployed onto the device to integrate with particular sensors and process telemetry data (e.g. read from a GPIO, make a REST call to an Arduino) - the use of handler files is intended to improve integration and interoperability. \u0026nbsp;\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E[ C ] - controllers, similar to Sensors, these can be directly connected or external - e.g. relays connected via USB or RF transmitters connected to the device to control lighting and heating\/air con. - similar to sensors, the use of handler files is intended to improve integration and interoperability\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E[ A ] - Aggregators - the device configuration includes details of the MQTT topics to subscribe to (i.e. telemetry data from sensors or output from other aggregators) and publish aggregated output on. Handlers deployed to the device implement the operations to perform on the data (eg. read data from multiple sensors via subscriptions, process it and publish the output on a particular topic). For example, the Sensors connected to the aggregators in the diagram could all be temperature sensors - the first aggregator could compute mean, min and max temperatures for an open plan office, based on the readings from relevant sensors and the next aggregator could calculate the average temperature for a floor\/building etc. Telemetry data from sensors can be subscribed to by any number of aggregartors, allowing the same data to be processed in multiple, independent ways.\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E[ B ] - Delegators (renamed from brokers as they could be easily confused with MQTT brokers) act as intermediaries between the platform and the controllers - so the delegator in the diagram could control all the lighting\/heating controls for the open plan office. Delegators also allow multiple controllers to be included into the same command (for example, a \u0026quot;scene setting\u0026quot; command could manage or adjust lighting, blinds and AV equipment in a meeting room during a presentation\/video-conference etc,). Delegators also allow other local devices (commanders, not in diagram) to interact with local controllers without having to interact directly with the platform\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E[ CR ] - Coordinator - essentially this is the edge device for a deployment - single point in and out of the deployment and the only local device which can communicate with the platform. In the event of a failure, this role can be moved to another device without the need for any sort of hot spares etc.\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E\u0026nbsp;\u003C\/div\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003EOn the platform side, there are three main components, but in a practical implementation, these can be subdivided or combined.\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E[ CrL ] - Coordinator link - this sits between the core platform and the deployment and coordinates messages between the deployment and the platform (readings from the deployment and commands from the platform etc.)\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E[ P ] - this is the core Platform functionality and uses a combination of MQTT to communicate with the Coordinator Link and REST service and web-scokets to integration with client facing solutions\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv style=\u0022font-family: arial, sans-serif; font-size: 12.8px;\u0022\u003E[ UI ] - this is any user facing solution.\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\u003C\/div\u003E\r\n\r\n\u003Cdiv\u003E\u003Cspan style=\u0022font-family:arial,sans-serif; font-size:12.8px\u0022\u003E[ DM ] - this is just a shared data layer used by both the platform and the Coordinator Link. It has no relevance in terms of the protocol, but is included here for completeness\u003C\/span\u003E\u003C\/div\u003E\r\n\r\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cdiv\u003E\r\n\u003Cp\u003EScalability is achievable through a hierarchical architecture whereby data collected from sensors can be processed and aggregated locally before being transferred to a central (cloud or on-premise) platform. Any device can be assiged the role of an \u0026quot;Aggregator\u0026quot; - allowing it to summarise, aggregate or otherwise process data from relevent sensors or aggregators so that the platform receives a single message with all the relevant readings (if desired) in addition to the processed output data. For example, rather than collecting and processing data from multiple sensors in an open plan office-space, HIP can transmit a single message summarising all the relevant data and store this without the need for further processing. In contrast to this, traditional IOT solutions tend to have a flat structure, whereby each sensor feeds raw data to the platform for subsequent, centralised processing.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EManagement is supported through the use of \u003Cstrong\u003EHealth \u003C\/strong\u003Eand \u003Cstrong\u003EConfiguration \u003C\/strong\u003Emessages. Roles such as \u0026quot;Aggregator\u0026quot; or \u0026quot;Controller\u0026quot; above can be assigned and configured centrally from the central platform UI. The \u0026quot;Health\u0026quot; messages update the central platform with the status of each device - allowing administrators to remove roles for under-provisioned devices based on their CPU or memory utilisation. For example, an Aggregator role could be moved from one device to another under-utilised device automatically from the central platform without the need for direct access to the relevant devices.\u003C\/p\u003E\r\n\u003C\/div\u003E\r\n\r\n\u003Cp\u003EIn addition to the protocol specification, a partial NodeJS implementation of the protocol is available across a number of GitHub repositories:\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cu\u003E\u003Cstrong\u003EPlatform:\u003C\/strong\u003E\u003C\/u\u003E\u003Cstrong\u003E \u003C\/strong\u003EThis is the main component within the ecosystem and is responsible for the vast majority of logic and control within HIP\u0026nbsp;- it provides REST APIs for client (UI) solutions as well as websockets notifications and also communicates with the\u0026nbsp;\u003Cstrong\u003E\u003Cu\u003ECoordinator-link\u003C\/u\u003E\u003C\/strong\u003E\u0026nbsp;via REST APIs and MQTT messaging\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cu\u003E\u003Cstrong\u003EDevice\u003C\/strong\u003E\u003C\/u\u003E: This is any \u0026quot;Thing\u0026quot; deployed as part of an IOT installation, Any Device can have one or more of the following roles and all communication is via MQTT.\u0026nbsp;\u003C\/p\u003E\r\n\r\n\u003Cul\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003ESensor\u003C\/strong\u003E\u0026nbsp;- this is a local sensor (e.g. DHT 22 for temperature and humidity), or a remote device which is not HIP\u0026nbsp;compatible. Invidivual handlers (e.g. JS file or Kura Bundle) can be deployed from the\u0026nbsp;\u003Cu\u003E\u003Cstrong\u003EPlatform\u003C\/strong\u003E\u003C\/u\u003E\u003Cstrong\u003E\u0026nbsp;\u003C\/strong\u003Eto enable \u0026nbsp;the\u0026nbsp;\u003Cu\u003E\u003Cstrong\u003EDevice\u003C\/strong\u003E\u003C\/u\u003E\u003Cstrong\u003E\u0026nbsp;\u003C\/strong\u003Eto integrate with the\u0026nbsp;\u003Cstrong\u003ESensor\u0026nbsp;\u003C\/strong\u003Eand forward readings on a poll or event-driven basis.\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003EController\u003C\/strong\u003E\u0026nbsp;(actuator) - Similar to\u0026nbsp;\u003Cstrong\u003ESensors,\u0026nbsp;\u003C\/strong\u003Ethis can be a local or remote actuator and handlers can be deployed from the platform to enable integration. A collection of commands and their parameters are maintained on the\u0026nbsp;\u003Cu\u003E\u003Cstrong\u003EPlatform\u003C\/strong\u003E\u003C\/u\u003E\u0026nbsp;and can be pushed to local\u0026nbsp;\u003Cu\u003E\u003Cstrong\u003ECommanders\u003C\/strong\u003E\u003C\/u\u003E\u003Cstrong\u003E\u0026nbsp;\u003C\/strong\u003Eto enable local control\/integration\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003ECoordinator -\u0026nbsp;\u003C\/strong\u003Ethis sits on the edge of a deployment\/installation and acts as a single point of contact bwtween the deployment (the Things) and the\u0026nbsp;\u003Cstrong\u003E\u003Cu\u003EPlatform\u003C\/u\u003E\u003C\/strong\u003E\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003EDelegator - \u003C\/strong\u003ECommands from the platform or a local \u003Cstrong\u003E\u003Cu\u003ECommander\u003C\/u\u003E\u003C\/strong\u003E can be routed through one or more Delegators. Different paths\/rules etc. can be managed by the\u0026nbsp;\u003Cu\u003E\u003Cstrong\u003EPlatform\u003C\/strong\u003E\u003C\/u\u003E\u003Cstrong\u003E\u0026nbsp;\u003C\/strong\u003Eand custom handlers deployed on the relevant device\u003C\/li\u003E\r\n\t\u003Cli\u003E\u003Cstrong\u003EAggregator -\u0026nbsp;\u003C\/strong\u003EMultiple\u0026nbsp;\u003Cstrong\u003ESensors\u0026nbsp;\u003C\/strong\u003Ecan have their readings forwarded to one or more\u0026nbsp;\u003Cstrong\u003EAggregators\u0026nbsp;\u003C\/strong\u003Eand aggregator handler s can process that data locally before forwarding the output to the\u0026nbsp;\u003Cstrong\u003ECoordinator\u0026nbsp;\u003C\/strong\u003Eand\/or one or more additional\u0026nbsp;\u003Cstrong\u003EAggregators\u003C\/strong\u003E. For example, an open plan space in a large office may have a number of lighting\/temperature sensors, in addition to uploading the individual readings, these can also be collated by an\u0026nbsp;\u003Cstrong\u003EAggregator\u0026nbsp;\u003C\/strong\u003Eto give a summarised view of the data - e.g. the temperature on the first floor or the ambient light levels on th easterly aspect of the building.\u003C\/li\u003E\r\n\u003C\/ul\u003E\r\n\r\n\u003Cp\u003E\u003Cu\u003E\u003Cstrong\u003ECoordinator-Link:\u003C\/strong\u003E\u003C\/u\u003E\u003Cstrong\u003E\u0026nbsp;\u003C\/strong\u003EThis is an MQTT based solotion which is deployed between the\u0026nbsp;\u003Cu\u003E\u003Cstrong\u003EPlatform\u003C\/strong\u003E\u003C\/u\u003E\u003Cstrong\u003E\u0026nbsp;\u003C\/strong\u003Eand the deployment (accessed via the\u0026nbsp;\u003Cstrong\u003ECoordinator\u0026nbsp;\u003C\/strong\u003Erole on a specified device)\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cstrong\u003E\u003Cu\u003EUI:\u003C\/u\u003E\u003C\/strong\u003E\u0026nbsp;this is a responsive frontend for the solution built in Angular and includes functionality for both administrators and end-users. The UI (and derrived Cordova apps) communicate directly with the\u0026nbsp;\u003Cu\u003E\u003Cstrong\u003EPlatform\u003C\/strong\u003E\u003C\/u\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cstrong\u003E\u003Cu\u003ECommander:\u003C\/u\u003E\u003C\/strong\u003E\u0026nbsp;this is (or will be) a standalone UI which communicates with the local Coordinator rather than the Platofrm in order to monitor associated\u0026nbsp;\u003Cstrong\u003ESensors\u0026nbsp;\u003C\/strong\u003Eand control associated\u0026nbsp;\u003Cstrong\u003EControllers\u003C\/strong\u003E\u003C\/p\u003E\r\n\r\n\u003Cp\u003ETo date, \u0026nbsp;a significant portion of the functionality has been developed\u0026nbsp; - sensors can push data, via Aggregators and the Coordinator to the Platform and the Coordinator can accept MQTT messages and route them to the relevent controller\/actuator. A number of additional components are under development (e.g. \u0026quot;health and status\u0026quot; messages from devices which will simplify the optimisation and role allocation across a deployment. The development of other elements, e.g., particular UI controls for viewing device and sensor status has not begun yet\u003C\/p\u003E","url":"http:\/\/projects.eclipse.org\/projects\/iot.hip","logo":null,"website":"http:\/\/www.eclipse.org\/hip","state":"Incubating","provisioned":true}}